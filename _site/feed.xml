<?xml version="1.0" encoding="UTF-8"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>向涛</title>
    <description>Welcome to my personal website~</description>
    <link>www.xiangtao.net.cn/</link>
    <atom:link href="www.xiangtao.net.cn/feed.xml" rel="self" type="application/rss+xml"/>
    <pubDate>Tue, 14 Sep 2021 21:45:30 +0800</pubDate>
    <lastBuildDate>Tue, 14 Sep 2021 21:45:30 +0800</lastBuildDate>
    <generator>Jekyll v4.2.0</generator>
    
      <item>
        <title>考虑对流效应和磁场的CMP模型及数值模拟论文笔记</title>
        <description>&lt;center&gt;
    &lt;img style=&quot;border-radius: 0.3125em;
    box-shadow: 0 2px 4px 0 rgba(34,36,38,.12),0 2px 10px 0 rgba(34,36,38,.08);&quot; src=&quot;https://cdn.jsdelivr.net/gh/xiang-tao/image-hosting@master/picture/CMP.6wtduy66xrk0.png&quot; width=&quot;60%&quot; /&gt;
    &lt;br /&gt;
    &lt;div style=&quot;color:orange; border-bottom: 1px solid #d9d9d9;
    display: inline-block;
    color: #999;
    padding: 2px;&quot;&gt;CMP工作示意图&lt;/div&gt;
&lt;/center&gt;

&lt;h2 id=&quot;具有对流效应的cmp润滑方程的推导&quot;&gt;具有对流效应的CMP润滑方程的推导&lt;/h2&gt;

&lt;p&gt;连续方程为：
\(\begin{equation}
\nabla\cdot\pmb{u} = 0
\end{equation}\)&lt;/p&gt;

&lt;p&gt;该方程等价于&lt;/p&gt;

\[\begin{equation}
\dfrac{\partial u_1}{\partial x} 
+ \dfrac{\partial u_2}{\partial y} 
+ \dfrac{\partial u_3}{\partial z}=0
\end{equation}\]

&lt;p&gt;运动方程为：&lt;/p&gt;

\[\begin{equation}
\rho\dfrac{\partial \pmb{u}}{\partial t}
+ \rho\pmb{u}\cdot\nabla \pmb{u}
= -\nabla p+ \eta\Delta \pmb{u} +\rho\pmb{F}
\end{equation}\]

&lt;p&gt;当假设\(\pmb{F} = \pmb{0}\)时，该方程等价于&lt;/p&gt;

\[\begin{equation}
\left \{
\begin{aligned}
\rho \left(\dfrac{\partial u_1}{\partial t}
+u_1 \dfrac{\partial u_1}{\partial x}
+u_2 \dfrac{\partial u_1}{\partial y}
+u_3 \dfrac{\partial u_1}{\partial z}\right)
= -\dfrac{\partial p}{\partial x} + \eta
\left( \dfrac{\partial^2 u_1}{\partial x^2} + \dfrac{\partial^2 u_1}{\partial y^2}
+\dfrac{\partial^2 u_1}{\partial z^2}  \right) \\
\rho \left(\dfrac{\partial u_2}{\partial t}
+u_1 \dfrac{\partial u_2}{\partial x}
+u_2 \dfrac{\partial u_2}{\partial y}
+u_3 \dfrac{\partial u_2}{\partial z}\right)
= -\dfrac{\partial p}{\partial y} + \eta
\left( \dfrac{\partial^2 u_2}{\partial x^2} + \dfrac{\partial^2 u_2}{\partial y^2}
+\dfrac{\partial^2 u_2}{\partial z^2}  \right)\\
\rho \left(\dfrac{\partial u_3}{\partial t}
+u_1 \dfrac{\partial u_3}{\partial x}
+u_2 \dfrac{\partial u_3}{\partial y}
+u_3 \dfrac{\partial u_3}{\partial z}\right)
= -\dfrac{\partial p}{\partial z} + \eta
\left( \dfrac{\partial^2 u_3}{\partial x^2} + \dfrac{\partial^2 u_3}{\partial y^2}
+\dfrac{\partial^2 u_3}{\partial z^2}  \right)
\end{aligned}
\right.
\end{equation}\]

&lt;p&gt;&lt;strong&gt;假设条件&lt;/strong&gt;&lt;/p&gt;

&lt;ol&gt;
  &lt;li&gt;CMP过程中载荷完全由抛光液来承载，晶片由于抛光液的隔离完全与抛光垫分离，因为膜厚比较博，忽略质量力。&lt;/li&gt;
  &lt;li&gt;假设抛光液是牛顿性流体，在CMP过程中是稳态不可压的，流体的黏性系数是常数\(\eta\)。由于稳态所以\(\dfrac{\partial u_i}{\partial t} = 0\)。&lt;/li&gt;
  &lt;li&gt;满足无纲量润滑条件。即\(\dfrac{\partial^2 u_i}{\partial x^2} + \dfrac{\partial^2 u_i}{\partial y^2}\)比\(\dfrac{\partial^2 u_i}{\partial z^2}\)量级小，可以忽略。&lt;/li&gt;
  &lt;li&gt;在\(z\)轴方向总压力梯度为0，\(z\)轴方向的速度忽略不计。即\(u_3 = 0\)&lt;/li&gt;
&lt;/ol&gt;

&lt;p&gt;所以连续方程简化为&lt;/p&gt;

\[\begin{equation}
\dfrac{\partial u_1}{\partial x} 
+ \dfrac{\partial u_2}{\partial y} =0
\end{equation}\]

&lt;p&gt;运动方程简化为&lt;/p&gt;

\[\begin{equation}
\left \{
\begin{aligned}
\dfrac{\partial p}{\partial x}
+\rho u_1 \dfrac{\partial u_1}{\partial x}
+\rho u_2 \dfrac{\partial u_1}{\partial y}
&amp;amp;= \eta \dfrac{\partial^2 u_1}{\partial z^2} \\
\dfrac{\partial p}{\partial y}
+\rho u_1 \dfrac{\partial u_2}{\partial x}
+\rho u_2 \dfrac{\partial u_2}{\partial y}
&amp;amp;= \eta \dfrac{\partial^2 u_2}{\partial z^2}
\\
 \dfrac{\partial p}{\partial z} &amp;amp;= 0
\end{aligned}
\right.
\end{equation}\]

&lt;p&gt;上式的坐标系是直角坐标系，将其转化为柱坐标，则速度转换关系如下图&lt;/p&gt;

&lt;center&gt;
    &lt;img style=&quot;border-radius: 0.3125em;
    box-shadow: 0 2px 4px 0 rgba(34,36,38,.12),0 2px 10px 0 rgba(34,36,38,.08);&quot; src=&quot;https://cdn.jsdelivr.net/gh/xiang-tao/image-hosting@master/picture/CMPspeed.6ivt4x8iwxc0.png&quot; width=&quot;50%&quot; /&gt;
    &lt;br /&gt;
    &lt;div style=&quot;color:orange; border-bottom: 1px solid #d9d9d9;
    display: inline-block;
    color: #999;
    padding: 2px;&quot;&gt;CMP速度关系式&lt;/div&gt;
&lt;/center&gt;
&lt;p&gt;变换关系式为:&lt;/p&gt;

\[\begin{equation}
\left \{
\begin{aligned}
\dfrac{\partial x}{\partial r} = \cos\theta
~~~ \dfrac{\partial x}{\partial \theta}
= -r\cdot \sin\theta \\
\dfrac{\partial y}{\partial r} = \cos\theta
~~~ \dfrac{\partial y}{\partial \theta}
= r\cdot \cos\theta
\end{aligned}
\right.
\end{equation}\]

&lt;!--这里不太懂--&gt;
&lt;p&gt;\(\begin{equation}
\left \{
\begin{aligned}
\dfrac{\partial r}{\partial x} = \cos\theta
~~~ \dfrac{\partial \theta}{\partial x}
= -\dfrac{\sin\theta}{r} \\
\dfrac{\partial r}{\partial y} = \cos\theta
~~~ \dfrac{\partial \theta}{\partial y}
= \dfrac{\cos\theta}{r} 
\end{aligned}
\right.
\end{equation}\)&lt;/p&gt;

</description>
        <pubDate>Tue, 14 Sep 2021 00:00:00 +0800</pubDate>
        <link>www.xiangtao.net.cn/2021/09/%E5%AF%B9%E6%B5%81%E6%95%88%E5%BA%94%E5%92%8C%E7%A3%81%E5%9C%BA%E7%9A%84CMP%E6%A8%A1%E5%9E%8B/</link>
        <guid isPermaLink="true">www.xiangtao.net.cn/2021/09/%E5%AF%B9%E6%B5%81%E6%95%88%E5%BA%94%E5%92%8C%E7%A3%81%E5%9C%BA%E7%9A%84CMP%E6%A8%A1%E5%9E%8B/</guid>
        
        <category>mathematical</category>
        
        
      </item>
    
      <item>
        <title>第八章 函数探幽</title>
        <description>&lt;h2 id=&quot;c内联函数&quot;&gt;c++内联函数&lt;/h2&gt;

&lt;h2 id=&quot;引用变量&quot;&gt;引用变量&lt;/h2&gt;

&lt;ol&gt;
  &lt;li&gt;
    &lt;p&gt;创建引用变量&lt;/p&gt;

    &lt;p&gt;&lt;strong&gt;引用的创建&lt;/strong&gt;&lt;/p&gt;

    &lt;div class=&quot;language-c++ highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;kt&quot;&gt;int&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;rats&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;
&lt;span class=&quot;kt&quot;&gt;int&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;&amp;amp;&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;rodents&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;rats&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt; &lt;span class=&quot;c1&quot;&gt;//rodents是rats的一个引用&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;    &lt;/div&gt;

    &lt;p&gt;说明：此时相当于一个地址上套了两个标签，即rats和rodents的地址相同，其中一个变量改变则另一个随之改变。&lt;/p&gt;

    &lt;p&gt;&lt;strong&gt;引用和指针的区别&lt;/strong&gt;&lt;/p&gt;

    &lt;p&gt;指针可以先声明，再初始化，而引用在声明时候必须进行初始化。&lt;/p&gt;

    &lt;p&gt;&lt;strong&gt;引用的本质&lt;/strong&gt;&lt;/p&gt;

    &lt;p&gt;引用可以理解成为变量取一个别名，但其本质是一个&lt;strong&gt;const&lt;/strong&gt;指针&lt;/p&gt;

    &lt;div class=&quot;language-c++ highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;kt&quot;&gt;int&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;&amp;amp;&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;rodents&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;rats&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;
&lt;span class=&quot;kt&quot;&gt;int&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;*&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;const&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;pr&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;&amp;amp;&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;rats&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;&lt;span class=&quot;c1&quot;&gt;//引用的本质&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;    &lt;/div&gt;

    &lt;p&gt;上面的第1行代码的本质是第2行，其中引用rodents扮演的角色与*pr相同&lt;/p&gt;

    &lt;p&gt;&lt;strong&gt;赋值与引用&lt;/strong&gt;&lt;/p&gt;

    &lt;div class=&quot;language-c++ highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;kt&quot;&gt;int&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;a&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;10&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;
&lt;span class=&quot;kt&quot;&gt;int&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;&amp;amp;&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;b&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;a&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt; &lt;span class=&quot;c1&quot;&gt;//声明并初始化，即b是a的一个引用&lt;/span&gt;
&lt;span class=&quot;kt&quot;&gt;int&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;temp&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;50&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;
&lt;span class=&quot;n&quot;&gt;b&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;temp&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt; &lt;span class=&quot;c1&quot;&gt;//仅仅是赋值，等价于a = temp&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;    &lt;/div&gt;

    &lt;p&gt;上面的代码中第2行声明引用并初始化，而第4行仅仅是重新给b赋值，并不能理解成b变成了temp的引用；简而言之就是可以通过初始化声明来设置引用，但不能够通过赋值来设置。&lt;/p&gt;

    &lt;p&gt;&lt;strong&gt;注意：上述并不是引用的典型用途&lt;/strong&gt;&lt;/p&gt;
  &lt;/li&gt;
  &lt;li&gt;
    &lt;p&gt;将引用变量作为函数参数&lt;/p&gt;

    &lt;p&gt;&lt;strong&gt;按值传递 指针传递 引用传递&lt;/strong&gt;&lt;/p&gt;

    &lt;p&gt;&lt;strong&gt;按值传递&lt;/strong&gt;会产生一个副本，函数的功能将会是对副本的数据进行操作，而实参并不会随之改变。&lt;/p&gt;

    &lt;p&gt;&lt;strong&gt;指针传递&lt;/strong&gt;和&lt;strong&gt;引用传递&lt;/strong&gt;都不会产生一个新的副本，而是与实际的数据共用。&lt;/p&gt;

    &lt;p&gt;例如交换两个整数的函数声明及调用形式如下:&lt;/p&gt;

    &lt;div class=&quot;language-c++ highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;n&quot;&gt;swap&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;kt&quot;&gt;int&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;a&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;&lt;span class=&quot;kt&quot;&gt;int&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;b&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;);&lt;/span&gt; &lt;span class=&quot;c1&quot;&gt;//按值传递函数声明&lt;/span&gt;
&lt;span class=&quot;n&quot;&gt;swap&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;a&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;b&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;);&lt;/span&gt;&lt;span class=&quot;c1&quot;&gt;//调用形式&lt;/span&gt;
&lt;span class=&quot;n&quot;&gt;swap&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;kt&quot;&gt;int&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;*&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;a&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;&lt;span class=&quot;kt&quot;&gt;int&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;*&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;b&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;);&lt;/span&gt; &lt;span class=&quot;c1&quot;&gt;//指针传递函数声明&lt;/span&gt;
&lt;span class=&quot;n&quot;&gt;swap&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;&amp;amp;&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;a&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;&amp;amp;&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;b&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;);&lt;/span&gt;&lt;span class=&quot;c1&quot;&gt;//调用形式&lt;/span&gt;
&lt;span class=&quot;n&quot;&gt;swap&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;kt&quot;&gt;int&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;&amp;amp;&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;a&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;&lt;span class=&quot;kt&quot;&gt;int&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;&amp;amp;&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;b&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;);&lt;/span&gt; &lt;span class=&quot;c1&quot;&gt;//引用传递函数声明&lt;/span&gt;
&lt;span class=&quot;n&quot;&gt;swap&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;a&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;b&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;);&lt;/span&gt;&lt;span class=&quot;c1&quot;&gt;//调用形式&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;    &lt;/div&gt;

    &lt;p&gt;需要注意的是指针传递和引用传递他们的功能一样，但是在函数调用以及函数体写法上的区别，初次之外引用传递和按值传递他们除了在函数定义或者声明之处不一样外，其他都是一致的。&lt;/p&gt;
  &lt;/li&gt;
  &lt;li&gt;
    &lt;p&gt;引用的属性和特别之处&lt;/p&gt;

    &lt;p&gt;&lt;strong&gt;引用加const修饰符来防止数据被修改&lt;/strong&gt;&lt;/p&gt;

    &lt;p&gt;如果程序员的意图是让函数传递信息，而不需要对传递的信息进行修改，同时又想使用引用，则应使用const&lt;/p&gt;

    &lt;div class=&quot;language-c++ highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;kt&quot;&gt;double&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;refcube&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;k&quot;&gt;const&lt;/span&gt; &lt;span class=&quot;kt&quot;&gt;double&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;&amp;amp;&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;ra&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;&lt;span class=&quot;c1&quot;&gt;//此时在函数体中ra不允许修改，否则报错&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;    &lt;/div&gt;

    &lt;p&gt;&lt;strong&gt;按值传递和引用传递的调用时机&lt;/strong&gt;&lt;/p&gt;

    &lt;p&gt;如果使用的是基本数据类型，且不希望原始的数据被破坏，数据量小，则应该使用按值传递。&lt;/p&gt;

    &lt;p&gt;如果数据比较大(比如结构和类)，则应该使用引用传递，这样避免了副本的产生从而大大节约了内存和代码的运行时间(因为副本是复制产生的，复制时候需要占用大量的运行时间)。&lt;/p&gt;

    &lt;p&gt;&lt;strong&gt;临时变量 引用参数和const&lt;/strong&gt;&lt;/p&gt;

    &lt;p&gt;如果实参与引用参数不匹配，c++将产生临时变量，仅当参数为const引用时候生效，没有const编译器会报错。&lt;/p&gt;

    &lt;p&gt;如果引用参数是const，则产生临时变量的条件是&lt;/p&gt;

    &lt;ul&gt;
      &lt;li&gt;实参的类型正确，但不是左值。&lt;/li&gt;
      &lt;li&gt;实参的类型不正确，但可以转换成正确的类型。&lt;/li&gt;
    &lt;/ul&gt;

    &lt;div class=&quot;language-c++ highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;kt&quot;&gt;double&lt;/span&gt; &lt;span class=&quot;nf&quot;&gt;refcube&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;k&quot;&gt;const&lt;/span&gt; &lt;span class=&quot;kt&quot;&gt;double&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;&amp;amp;&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;ra&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;
&lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;
    &lt;span class=&quot;k&quot;&gt;return&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;ra&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;*&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;ra&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;
&lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;
&lt;span class=&quot;kt&quot;&gt;double&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;side&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;mf&quot;&gt;3.0&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;
&lt;span class=&quot;kt&quot;&gt;double&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;*&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;pd&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;&amp;amp;&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;side&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;
&lt;span class=&quot;kt&quot;&gt;double&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;&amp;amp;&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;rd&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;side&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;
&lt;span class=&quot;kt&quot;&gt;int&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;edge&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;5&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;
&lt;span class=&quot;kt&quot;&gt;double&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;lens&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;3&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;]&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;&lt;span class=&quot;mf&quot;&gt;1.0&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;&lt;span class=&quot;mf&quot;&gt;2.0&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;&lt;span class=&quot;mf&quot;&gt;3.0&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;};&lt;/span&gt;
&lt;span class=&quot;kt&quot;&gt;double&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;c1&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;refcube&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;side&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;);&lt;/span&gt;&lt;span class=&quot;c1&quot;&gt;//ra是side的引用，地址一致&lt;/span&gt;
&lt;span class=&quot;kt&quot;&gt;double&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;c2&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;refcube&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;lens&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;2&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;]);&lt;/span&gt;&lt;span class=&quot;c1&quot;&gt;//ra是lens[2]的引用，地址一致&lt;/span&gt;
&lt;span class=&quot;kt&quot;&gt;double&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;c3&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;refcube&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;rd&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;);&lt;/span&gt;&lt;span class=&quot;c1&quot;&gt;//ra是rd的引用，rd是side引用，因此他们三个地址一致&lt;/span&gt;
&lt;span class=&quot;kt&quot;&gt;double&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;c4&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;refcube&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;*&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;pd&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;);&lt;/span&gt;&lt;span class=&quot;c1&quot;&gt;//ra是*pd的引用，而*pd=side，因此他们地址一致&lt;/span&gt;
&lt;span class=&quot;kt&quot;&gt;double&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;c5&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;refcube&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;edge&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;);&lt;/span&gt;&lt;span class=&quot;c1&quot;&gt;//ra是一个临时变量，因为edge是int，类型不匹配&lt;/span&gt;
&lt;span class=&quot;kt&quot;&gt;double&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;c6&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;refcube&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;mf&quot;&gt;7.0&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;);&lt;/span&gt;&lt;span class=&quot;c1&quot;&gt;//ra是一个临时变量，ra=7.0,尽管7.0是double，但7.0不是左值表达式&lt;/span&gt;
&lt;span class=&quot;kt&quot;&gt;double&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;c7&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;refcube&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;side&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;+&lt;/span&gt; &lt;span class=&quot;mf&quot;&gt;10.0&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;);&lt;/span&gt;&lt;span class=&quot;c1&quot;&gt;//ra是临时变量,side+10.0尽管是double，但不是左值表达式&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;    &lt;/div&gt;

    &lt;p&gt;上面的15 16行也可以说是他们没哟名称，从而会产生一个临时变量，产生临时变量的本质是，例如&lt;/p&gt;

    &lt;div class=&quot;language-c++ highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;kt&quot;&gt;double&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;a&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;mf&quot;&gt;2.0&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;
&lt;span class=&quot;kt&quot;&gt;int&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;b&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;1&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;
&lt;span class=&quot;kt&quot;&gt;int&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;&amp;amp;&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;c&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;b&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;&lt;span class=&quot;c1&quot;&gt;//ok,c是b的引用,地址一致&lt;/span&gt;
&lt;span class=&quot;kt&quot;&gt;int&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;&amp;amp;&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;d&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;a&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;&lt;span class=&quot;c1&quot;&gt;//ok,但会产生临时变量，导致d的地址是临时变量的地址，与a的地址不一样&lt;/span&gt;
&lt;span class=&quot;cm&quot;&gt;/*
产生临时变量:
int &amp;amp;d =a;
编译器进行了如下操作
int temp = a;将double类型的a的数据存储到int类型的临时变量temp中
int &amp;amp;d =temp;此时d再引用临时变量temp，即d的地址与temp一致
*/&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;    &lt;/div&gt;

    &lt;p&gt;也就是所当产生临时变量时候，引用参数的地址不再与传递参数的地址一致，所以改变他们其中一个数的值，另一个不会随之改变。前提是引用使用了const，否则编译会因为类型不同或者不是左值表达式而报错。&lt;/p&gt;

    &lt;p&gt;&lt;strong&gt;注意&lt;/strong&gt; 对于未加const的引用当类型不匹配时，有些较老的编译器仍然能够正确运行，只是发出临时变量的警告，这时候的警告我们不能够忽略它，&lt;strong&gt;此外我们应该在函数的引用参数中尽量使用const，&lt;/strong&gt;这样能够接受更多类型的实参，只是当类型不匹配时候const引用参数功能就跟按值传递的功能一样(因为产生了临时变量实参和形参的地址不一样了)，同时在c++11标准中，&lt;strong&gt;&amp;amp;称为左值引用，&amp;amp;&amp;amp;称为右值引用&lt;/strong&gt;，关于&amp;amp;&amp;amp;引用此处不做说明。&lt;/p&gt;
  &lt;/li&gt;
  &lt;li&gt;
    &lt;p&gt;将引用用于结构&lt;/p&gt;

    &lt;p&gt;c++设计左值引用的目的主要是针对结构体和类，而不是基本数据类型，原因上面已经说过，这样可以避免副本的产生而大大的减少程序运行时间。结构和类都是用户定义的数据类型，使用方式和使用基本的数据类型一样，例如定义了一个Student的结构，那么引用的时候Student就跟int一样去操作即可。&lt;/p&gt;
  &lt;/li&gt;
  &lt;li&gt;
    &lt;p&gt;将引用用于类对象&lt;/p&gt;
  &lt;/li&gt;
  &lt;li&gt;
    &lt;p&gt;对象 继承和引用&lt;/p&gt;
  &lt;/li&gt;
  &lt;li&gt;
    &lt;p&gt;何时使用引用参数&lt;/p&gt;
  &lt;/li&gt;
&lt;/ol&gt;

</description>
        <pubDate>Sun, 12 Sep 2021 00:00:00 +0800</pubDate>
        <link>www.xiangtao.net.cn/2021/09/%E5%87%BD%E6%95%B0%E6%8E%A2%E5%B9%BD/</link>
        <guid isPermaLink="true">www.xiangtao.net.cn/2021/09/%E5%87%BD%E6%95%B0%E6%8E%A2%E5%B9%BD/</guid>
        
        <category>c++</category>
        
        
      </item>
    
      <item>
        <title>gcc 命令参数</title>
        <description>&lt;h2 id=&quot;gcc命令参数&quot;&gt;gcc命令参数&lt;/h2&gt;

&lt;ol&gt;
  &lt;li&gt;gcc -E source_file.c&lt;/li&gt;
&lt;/ol&gt;

&lt;p&gt;　　-E，只执行到预编译。直接输出预编译结果。&lt;/p&gt;

&lt;ol&gt;
  &lt;li&gt;gcc -S source_file.c&lt;/li&gt;
&lt;/ol&gt;

&lt;p&gt;　　 -S，只执行到源代码到汇编代码的转换，输出汇编代码。&lt;/p&gt;

&lt;ol&gt;
  &lt;li&gt;gcc -c source_file.c&lt;/li&gt;
&lt;/ol&gt;

&lt;p&gt;　　-c，只执行到编译，输出目标文件。&lt;/p&gt;

&lt;ol&gt;
  &lt;li&gt;gcc (-E/S/c/) source_file.c -o output_filename&lt;/li&gt;
&lt;/ol&gt;

&lt;p&gt;　　-o, 指定输出文件名，可以配合以上三种标签使用。-o 参数可以被省略。这种情况下编译器将使用以下默认名称输出：&lt;/p&gt;

&lt;p&gt;　　-E：预编译结果将被输出到标准输出端口（通常是显示器）&lt;/p&gt;

&lt;p&gt;　　-S：生成名为source_file.s的汇编代码&lt;/p&gt;

&lt;p&gt;　　-c：生成名为source_file.o的目标文件。无标签情况：生成名为a.out的可执行文件。&lt;/p&gt;

&lt;ol&gt;
  &lt;li&gt;gcc -g source_file.c&lt;/li&gt;
&lt;/ol&gt;

&lt;p&gt;　　 -g，生成供调试用的可执行文件，可以在gdb中运行。由于文件中包含了调试信息因此运行效率很低，且文件也大不少。这里可以用strip命令重新将文件中debug信息删除。这是会发现生成的文件甚至比正常编译的输出更小了，这是因为strip把原先正常编译中的一些额外信息（如函数名之类）也删除了。用法为 strip a.out&lt;/p&gt;

&lt;ol&gt;
  &lt;li&gt;gcc -s source_file.c&lt;/li&gt;
&lt;/ol&gt;

&lt;p&gt;　　-s, 直接生成与运用strip同样效果的可执行文件（删除了所有符号信息）。&lt;/p&gt;

&lt;ol&gt;
  &lt;li&gt;gcc -O source_file.c&lt;/li&gt;
&lt;/ol&gt;

&lt;p&gt;　　-O（大写的字母O），编译器对代码进行自动优化编译，输出效率更高的可执行文件。&lt;/p&gt;

&lt;p&gt;　　-O 后面还可以跟上数字指定优化级别，如：gcc -O2 source_file.c数字越大，越加优化。但是通常情况下，自动的东西都不是太聪明，太大的优化级别可能会使生成的文件产生一系列的bug。一般可选择2；3会有一定风险。&lt;/p&gt;

&lt;ol&gt;
  &lt;li&gt;gcc -Wall source_file.c&lt;/li&gt;
&lt;/ol&gt;

&lt;p&gt;　　-W，在编译中开启一些额外的警告（warning）信息。-Wall，将所有的警告信息全开。&lt;/p&gt;

&lt;ol&gt;
  &lt;li&gt;gcc source_file.c -L/path/to/lib -lxxx -I/path/to/include&lt;/li&gt;
&lt;/ol&gt;

&lt;p&gt;　　-l,  指定所使用到的函数库，本例中链接器会尝试链接名为libxxx.a的函数库。&lt;/p&gt;

&lt;p&gt;　　-L，指定函数库所在的文件夹，本例中链接器会尝试搜索/path/to/lib文件夹。&lt;/p&gt;

&lt;p&gt;　　-I, 指定头文件所在的文件夹，本例中预编译器会尝试搜索/path/to/include文件夹。&lt;/p&gt;

&lt;hr /&gt;

&lt;p&gt;原文：https://blog.csdn.net/zhubaohua_bupt/article/details/52763639&lt;/p&gt;
</description>
        <pubDate>Fri, 03 Sep 2021 00:00:00 +0800</pubDate>
        <link>www.xiangtao.net.cn/2021/09/gcc/</link>
        <guid isPermaLink="true">www.xiangtao.net.cn/2021/09/gcc/</guid>
        
        <category>gcc</category>
        
        
      </item>
    
      <item>
        <title>markdown 语法入门</title>
        <description>&lt;h2 id=&quot;插入latex公式&quot;&gt;插入\(\LaTeX\)公式&lt;/h2&gt;

&lt;ol&gt;
  &lt;li&gt;插入文字间的公式，为了网页端的需要，仍然使用$$转义，例如\(x\in Y\)。&lt;/li&gt;
  &lt;li&gt;插入行间的LaTeX公式，网页端显示目前我的配置只支持使用$$&lt;/li&gt;
&lt;/ol&gt;

\[\begin{equation}
   \left \{
   \begin{aligned}
   &amp;amp; \dfrac{\partial u}{\partial t}-k\dfrac{\partial^2 u}{\partial x^2}=0 \\
   &amp;amp; u(0,t)=0,~~u(1,t)=0,~~t\in [0,0.1] \\
   &amp;amp; u(x,0) = e^{-\dfrac{(x-0.25)^2}{0.01}}+0.1*sin(20\pi x), x\in (0,1)
   \end{aligned}
   \right.
   \end{equation}\]

&lt;h2 id=&quot;插入代码&quot;&gt;插入代码&lt;/h2&gt;

&lt;p&gt;下面插入的是一段c++代码&lt;/p&gt;

&lt;div class=&quot;language-c++ highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;kt&quot;&gt;void&lt;/span&gt; &lt;span class=&quot;nf&quot;&gt;test01&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;()&lt;/span&gt;
&lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;
    &lt;span class=&quot;n&quot;&gt;vector&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;&amp;lt;&lt;/span&gt;&lt;span class=&quot;kt&quot;&gt;int&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;&amp;gt;&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;v&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;
    &lt;span class=&quot;k&quot;&gt;for&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;kt&quot;&gt;int&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;i&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;0&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;i&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;&amp;lt;&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;10&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;i&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;++&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;
    &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;
        &lt;span class=&quot;n&quot;&gt;v&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;push_back&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;i&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;);&lt;/span&gt;
    &lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;
    &lt;span class=&quot;c1&quot;&gt;//查找容器中是否有5这个元素&lt;/span&gt;
    &lt;span class=&quot;n&quot;&gt;vector&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;&amp;lt;&lt;/span&gt;&lt;span class=&quot;kt&quot;&gt;int&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;&amp;gt;::&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;iterator&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;it&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;find&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;v&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;begin&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(),&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;v&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;end&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(),&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;50&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;);&lt;/span&gt;
    &lt;span class=&quot;k&quot;&gt;if&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;it&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;==&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;v&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;end&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;())&lt;/span&gt;
    &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;
        &lt;span class=&quot;n&quot;&gt;cout&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;&amp;lt;&amp;lt;&lt;/span&gt; &lt;span class=&quot;s&quot;&gt;&quot;没有找到！&quot;&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;&amp;lt;&amp;lt;&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;endl&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;
    &lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;
    &lt;span class=&quot;k&quot;&gt;else&lt;/span&gt;
    &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;
        &lt;span class=&quot;n&quot;&gt;cout&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;&amp;lt;&amp;lt;&lt;/span&gt; &lt;span class=&quot;s&quot;&gt;&quot;找到了！&quot;&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;&amp;lt;&amp;lt;&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;endl&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;
    &lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;
&lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;
&lt;h2 id=&quot;插入表格&quot;&gt;插入表格&lt;/h2&gt;

&lt;table&gt;
  &lt;thead&gt;
    &lt;tr&gt;
      &lt;th style=&quot;text-align: center&quot;&gt;四川&lt;/th&gt;
      &lt;th style=&quot;text-align: center&quot;&gt;贵州&lt;/th&gt;
      &lt;th style=&quot;text-align: center&quot;&gt;云南&lt;/th&gt;
    &lt;/tr&gt;
  &lt;/thead&gt;
  &lt;tbody&gt;
    &lt;tr&gt;
      &lt;td style=&quot;text-align: center&quot;&gt;宜宾&lt;/td&gt;
      &lt;td style=&quot;text-align: center&quot;&gt;毕节&lt;/td&gt;
      &lt;td style=&quot;text-align: center&quot;&gt;昆明&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;td style=&quot;text-align: center&quot;&gt;成都&lt;/td&gt;
      &lt;td style=&quot;text-align: center&quot;&gt;贵阳&lt;/td&gt;
      &lt;td style=&quot;text-align: center&quot;&gt;丽江&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;td style=&quot;text-align: center&quot;&gt;\(x\in y\)&lt;/td&gt;
      &lt;td style=&quot;text-align: center&quot;&gt;\(y\in x\)&lt;/td&gt;
      &lt;td style=&quot;text-align: center&quot;&gt;\(N\)&lt;/td&gt;
    &lt;/tr&gt;
  &lt;/tbody&gt;
&lt;/table&gt;

&lt;h2 id=&quot;插入链接图片&quot;&gt;插入链接图片&lt;/h2&gt;
&lt;p&gt;&lt;img src=&quot;https://cdn.jsdelivr.net/gh/xiang-tao/image-hosting@master/picture/20210509-3.5sgg78x5fyw0.png&quot; alt=&quot;来自github链接图片&quot; /&gt;&lt;/p&gt;

&lt;h2 id=&quot;其他的基本功能&quot;&gt;其他的基本功能&lt;/h2&gt;

&lt;ol&gt;
  &lt;li&gt;高亮: ==美丽的姑娘==&lt;/li&gt;
  &lt;li&gt;上标与下标： 我^平方^，你~下标~&lt;/li&gt;
  &lt;li&gt;注释： &lt;!--这是注释--&gt;&lt;/li&gt;
  &lt;li&gt;加粗： &lt;strong&gt;B&lt;/strong&gt;B&lt;/li&gt;
  &lt;li&gt;斜体： &lt;em&gt;A&lt;/em&gt;A&lt;/li&gt;
  &lt;li&gt;下划线：&lt;u&gt;我爱她轰轰烈烈&lt;/u&gt;&lt;/li&gt;
  &lt;li&gt;删除线: &lt;del&gt;等到时光破碎&lt;/del&gt;&lt;/li&gt;
  &lt;li&gt;超链接: &lt;a href=&quot;https://github.com/xiang-tao&quot;&gt;Github&lt;/a&gt;.&lt;/li&gt;
&lt;/ol&gt;

&lt;h2 id=&quot;引用&quot;&gt;引用&lt;/h2&gt;

&lt;blockquote&gt;
  &lt;p&gt;参考文献1：偏微分方程数值解&lt;/p&gt;

  &lt;blockquote&gt;
    &lt;p&gt;参考文献2&lt;/p&gt;
  &lt;/blockquote&gt;
&lt;/blockquote&gt;

&lt;h2 id=&quot;水平分割线&quot;&gt;水平分割线&lt;/h2&gt;

&lt;hr /&gt;

&lt;h2 id=&quot;画流程图&quot;&gt;画流程图&lt;/h2&gt;

&lt;pre&gt;&lt;code class=&quot;language-mermaid&quot;&gt;graph LR
A[方形] --&amp;gt;B(圆角)
    B --&amp;gt; C{条件a}
    C --&amp;gt;|a=1| D[结果1]
    C --&amp;gt;|a=2| E[结果2]
    F[横向流程图]
&lt;/code&gt;&lt;/pre&gt;
&lt;pre&gt;&lt;code class=&quot;language-mermaid&quot;&gt;%% 时序图例子,-&amp;gt; 直线，--&amp;gt;虚线，-&amp;gt;&amp;gt;实线箭头
  sequenceDiagram
    participant 张三
    participant 李四
    张三-&amp;gt;王五: 王五你好吗？
    loop 健康检查
        王五-&amp;gt;王五: 与疾病战斗
    end
    Note right of 王五: 合理 食物 &amp;lt;br/&amp;gt;看医生...
    李四--&amp;gt;&amp;gt;张三: 很好!
    王五-&amp;gt;李四: 你怎么样?
    李四--&amp;gt;王五: 很好!
&lt;/code&gt;&lt;/pre&gt;

&lt;div class=&quot;mermaid&quot;&gt;
graph LR
A[方形] --&amp;gt;B(圆角)
    B --&amp;gt; C{条件a}
    C --&amp;gt;|a=1| D[结果1]
    C --&amp;gt;|a=2| E[结果2]
    F[横向流程图]
&lt;/div&gt;

&lt;div class=&quot;mermaid&quot;&gt;
%% 时序图例子,-&amp;gt; 直线，--&amp;gt;虚线，-&amp;gt;&amp;gt;实线箭头
  sequenceDiagram
    participant 张三
    participant 李四
    张三-&amp;gt;王五: 王五你好吗？
    loop 健康检查
        王五-&amp;gt;王五: 与疾病战斗
    end
    Note right of 王五: 合理 食物 &lt;br /&gt;看医生...
    李四--&amp;gt;&amp;gt;张三: 很好!
    王五-&amp;gt;李四: 你怎么样?
    李四--&amp;gt;王五: 很好!
&lt;/div&gt;
</description>
        <pubDate>Tue, 31 Aug 2021 00:00:00 +0800</pubDate>
        <link>www.xiangtao.net.cn/2021/08/markdown/</link>
        <guid isPermaLink="true">www.xiangtao.net.cn/2021/08/markdown/</guid>
        
        <category>markdown</category>
        
        
      </item>
    
      <item>
        <title>本地仓库上传到github/gitlab命令及一些常见问题解决方案</title>
        <description>&lt;h2 id=&quot;本地仓库上传命令github为例&quot;&gt;本地仓库上传命令，github为例&lt;/h2&gt;

&lt;ol&gt;
  &lt;li&gt;git init: 初始化仓库&lt;/li&gt;
  &lt;li&gt;git add .   或者 git add 文件名 ：分别表示上传所有文件和单个文件&lt;/li&gt;
  &lt;li&gt;git commit -m ‘上传说明内容’:将要上传的文件上传到缓存区&lt;/li&gt;
  &lt;li&gt;git push:上传到远程仓库&lt;/li&gt;
&lt;/ol&gt;

&lt;p&gt;注意：上面的操作一般是在通过命令&lt;/p&gt;

&lt;p&gt;git clone 远程仓库地址&lt;/p&gt;

&lt;p&gt;后直接使用后面的三步就可以达到上传更新远程仓库的效果，第一步一般不用。&lt;/p&gt;

&lt;p&gt;更新本地仓库使用： git pull   前提是config文件下有如下代码(config文件位于.git/config)&lt;/p&gt;

&lt;div class=&quot;language-js highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;
&lt;span class=&quot;p&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;core&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;]&lt;/span&gt;
    &lt;span class=&quot;nx&quot;&gt;repositoryformatversion&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;0&lt;/span&gt; 
    &lt;span class=&quot;nx&quot;&gt;filemode&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;kc&quot;&gt;true&lt;/span&gt;
    &lt;span class=&quot;nx&quot;&gt;bare&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;kc&quot;&gt;false&lt;/span&gt;
    &lt;span class=&quot;nx&quot;&gt;logallrefupdates&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;kc&quot;&gt;true&lt;/span&gt;
&lt;span class=&quot;p&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;remote&lt;/span&gt; &lt;span class=&quot;dl&quot;&gt;&quot;&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;origin&lt;/span&gt;&lt;span class=&quot;dl&quot;&gt;&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;]&lt;/span&gt;
    &lt;span class=&quot;nx&quot;&gt;url&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;自己的仓库地址&lt;/span&gt;
    &lt;span class=&quot;nx&quot;&gt;fetch&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;+&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;refs&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;/&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;heads&lt;/span&gt;&lt;span class=&quot;cm&quot;&gt;/*:refs/remotes/origin/*                                       
[branch &quot;main&quot;]
    remote = origin
    merge = refs/heads/main
[pull]
    rebase = false
    
&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;注意：一般克隆的文件不会包含&lt;/p&gt;

&lt;div class=&quot;language-js highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;p&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;pull&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;]&lt;/span&gt;
    &lt;span class=&quot;nx&quot;&gt;rebase&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;kc&quot;&gt;false&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;需要使用命令：git config pull.rebase false，使用命令后config文件里面会多出如上的代码，或者直接在config文件中添加如上的代码进去，不然使用git pull 更新命令时候会有警告。&lt;/p&gt;

&lt;p&gt;值得一提的是上面的操作是在克隆的前提下，本地仓库已经和远程仓库有连接了的前提下进行的，否则应该运行一些其他的连接远程仓库命令，具体可以自行百度。&lt;/p&gt;

&lt;h2 id=&quot;如何上传大型文件&quot;&gt;如何上传大型文件&lt;/h2&gt;

&lt;p&gt;说明：一般情况下上传大型文件会显示错误上传失败的信息，那么如何上传大型的文件或者文件夹呢，一般简单的做法是先运行如下命令：&lt;/p&gt;

&lt;p&gt;git config http.postBuffer 524288000&lt;/p&gt;

&lt;p&gt;该命令的作用是在config文件中添加了如下代码&lt;/p&gt;

&lt;div class=&quot;language-js highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;p&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;http&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;]&lt;/span&gt;
    &lt;span class=&quot;nx&quot;&gt;postBuffer&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;524288000&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;同样也可以不运行命令自己手动添加进去，但是要注意格式，比如空格等。这个代码的意思是增加缓存空间来上传大型文件，但是有时候添加这个命令还是要报错，因此可以使用另一个方法，使用如下：&lt;/p&gt;

&lt;ol&gt;
  &lt;li&gt;你需要安装git LFS&lt;/li&gt;
&lt;/ol&gt;

&lt;p&gt;&lt;strong&gt;什么是git LFS&lt;/strong&gt;&lt;/p&gt;

&lt;p&gt;LFS是Large File Storage的缩写，用了帮助git管理大的文件&lt;/p&gt;

&lt;p&gt;原理：不同于git每次保存diff，对于git来说，如果是模型或者一些设计大文件，改变一点，对于仓库来说会增加很大的体积，不一会就能几个G。对于git lfs来说，在使用git lfs track命令后，git push的时候，git lfs会截取要管理的大文件，并将其传至git lfs的服务器中，从而减小仓库的体积&lt;/p&gt;

&lt;p&gt;如果你是ubuntu:&lt;/p&gt;

&lt;div class=&quot;language-js highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;mi&quot;&gt;1&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;curl&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;-&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;s&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;https&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt;&lt;span class=&quot;c1&quot;&gt;//packagecloud.io/install/repositories/github/git-lfs/script.deb.sh | sudo bash&lt;/span&gt;
&lt;span class=&quot;mi&quot;&gt;2&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;sudo&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;apt&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;-&lt;/span&gt;&lt;span class=&quot;kd&quot;&gt;get&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;install&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;git&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;-&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;lfs&lt;/span&gt;
&lt;span class=&quot;mi&quot;&gt;3&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;git&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;lfs&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;install&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;
&lt;p&gt;如果你是mac系统：&lt;/p&gt;

&lt;p&gt;运行&lt;strong&gt;brew install git-lfs&lt;/strong&gt;即可安装&lt;/p&gt;

&lt;ol&gt;
  &lt;li&gt;如何使用，才能够上传大型文件不报错&lt;/li&gt;
&lt;/ol&gt;

&lt;p&gt;先运行：git lfs track model.pb，其中model.pb是自己的文件名字，如果是文件夹，则使用如下命令&lt;/p&gt;

&lt;div class=&quot;language-js highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;nx&quot;&gt;git&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;lfs&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;track&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;wenjian&lt;/span&gt;&lt;span class=&quot;cm&quot;&gt;/*
&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;如果是第一次上传大型文件，则然后会在当地仓库下生成一个&lt;strong&gt;.gitattributes&lt;/strong&gt;的隐藏文件，我们需要先用如下命令上传它：&lt;/p&gt;

&lt;div class=&quot;language-js highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;nx&quot;&gt;git&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;add&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;gitattributes&lt;/span&gt;
&lt;span class=&quot;nx&quot;&gt;git&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;commit&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;-&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;m&lt;/span&gt; &lt;span class=&quot;dl&quot;&gt;'&lt;/span&gt;&lt;span class=&quot;s1&quot;&gt;update&lt;/span&gt;&lt;span class=&quot;dl&quot;&gt;'&lt;/span&gt;
&lt;span class=&quot;nx&quot;&gt;git&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;push&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;然后就可以上传自己的大型文件了，例如：&lt;/p&gt;

&lt;p&gt;假设上传文件名为model.pb&lt;/p&gt;

&lt;div class=&quot;language-js highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;nx&quot;&gt;git&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;add&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;model&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;pb&lt;/span&gt;
&lt;span class=&quot;nx&quot;&gt;git&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;commit&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;-&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;m&lt;/span&gt; &lt;span class=&quot;dl&quot;&gt;'&lt;/span&gt;&lt;span class=&quot;s1&quot;&gt;update&lt;/span&gt;&lt;span class=&quot;dl&quot;&gt;'&lt;/span&gt;
&lt;span class=&quot;nx&quot;&gt;git&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;push&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;
&lt;p&gt;假设上传的是文件夹&lt;/p&gt;

&lt;div class=&quot;language-js highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;nx&quot;&gt;git&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;add&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;wenjian&lt;/span&gt;&lt;span class=&quot;cm&quot;&gt;/*
git commit -m 'update'
git push
&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;如果后面还需要上传大型文件，则不再需要上传&lt;strong&gt;.gitattributes&lt;/strong&gt;的隐藏文件，只需要运行如下命令即可，只是比上传普通文件多了一个命令。&lt;/p&gt;

&lt;div class=&quot;language-js highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;nx&quot;&gt;git&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;lfs&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;track&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;model&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;pb&lt;/span&gt;
&lt;span class=&quot;nx&quot;&gt;git&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;add&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;model&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;pb&lt;/span&gt;
&lt;span class=&quot;nx&quot;&gt;git&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;commit&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;-&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;m&lt;/span&gt; &lt;span class=&quot;dl&quot;&gt;'&lt;/span&gt;&lt;span class=&quot;s1&quot;&gt;update&lt;/span&gt;&lt;span class=&quot;dl&quot;&gt;'&lt;/span&gt;
&lt;span class=&quot;nx&quot;&gt;git&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;push&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;注意当运行了&lt;strong&gt;git lfs install&lt;/strong&gt;后，config文件下会多一些代码，如下所示(其中内部的链接十个人的远程仓库对应的网址)：&lt;/p&gt;

&lt;div class=&quot;language-js highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;p&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;lfs&lt;/span&gt; &lt;span class=&quot;dl&quot;&gt;&quot;&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;https://hub.fastgit.org/xiang-tao/python3.git/info/lfs&lt;/span&gt;&lt;span class=&quot;dl&quot;&gt;&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;]&lt;/span&gt;
    &lt;span class=&quot;nx&quot;&gt;access&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;basic&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;但是当安装了lfs后发现，每次更新文件都要输入两次用户名和两次密码，很麻烦，目前没有找到好的解决方案，可以先把把整个文件删除后，同时需要把远程仓库中的&lt;strong&gt;.gitattributes&lt;/strong&gt;文件删除，然后重新克隆，然后就不会出现两次密码的情况了，但是会导致后面克隆的时候由于缺少了&lt;strong&gt;.gitattributes&lt;/strong&gt;文件，导致克隆的大文件失真无法正常使用。且后面若想上传大型数据，那就需要根据上面重新操作。&lt;/p&gt;

&lt;h2 id=&quot;如何在本地可以同时更新多个远程仓库比如githubgitlabgitee以github和gitee为例&quot;&gt;如何在本地可以同时更新多个远程仓库，比如github\gitlab\gitee.以GitHub和gitee为例&lt;/h2&gt;

&lt;ol&gt;
  &lt;li&gt;使用命令来将本地项目和Github/Gitee上面项目进行关联&lt;/li&gt;
&lt;/ol&gt;

&lt;p&gt;git remote add gitee/github 项目地址&lt;/p&gt;

&lt;p&gt;运行后config文件夹会多出一些代码，不管怎样，最后的代码至少有如下的形式，一般需要打开后进行手动改动一些东西，反正一般要如下的形式，你甚至可以不运行命令，自己输入到config文件中，但是格式要对。&lt;/p&gt;

&lt;div class=&quot;language-js highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;
&lt;span class=&quot;p&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;core&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;]&lt;/span&gt;
   &lt;span class=&quot;nx&quot;&gt;repositoryformatversion&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;0&lt;/span&gt;    
   &lt;span class=&quot;nx&quot;&gt;filemode&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;kc&quot;&gt;false&lt;/span&gt;     
   &lt;span class=&quot;nx&quot;&gt;bare&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;kc&quot;&gt;false&lt;/span&gt;     
   &lt;span class=&quot;nx&quot;&gt;logallrefupdates&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;kc&quot;&gt;true&lt;/span&gt;     
   &lt;span class=&quot;nx&quot;&gt;symlinks&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;kc&quot;&gt;false&lt;/span&gt;     
   &lt;span class=&quot;nx&quot;&gt;ignorecase&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;kc&quot;&gt;true&lt;/span&gt;    
&lt;span class=&quot;p&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;remote&lt;/span&gt; &lt;span class=&quot;dl&quot;&gt;&quot;&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;github&lt;/span&gt;&lt;span class=&quot;dl&quot;&gt;&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;]&lt;/span&gt;     
   &lt;span class=&quot;nx&quot;&gt;url&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;github项目地址&lt;/span&gt;     
   &lt;span class=&quot;nx&quot;&gt;fetch&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;+&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;refs&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;/&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;heads&lt;/span&gt;&lt;span class=&quot;cm&quot;&gt;/*:refs/remotes/origin/*    
[remote &quot;gitee&quot;]      
   url = gitee项目地址     
   fetch = +refs/heads/*:refs/remotes/origin/*   
[branch &quot;master&quot;]     
   remote = origin     
   merge = refs/heads/master

&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;使用&lt;strong&gt;git remote -v&lt;/strong&gt;命令可以查看是否成功，出现如下形式则成功：&lt;/p&gt;

&lt;div class=&quot;language-js highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;nx&quot;&gt;gitee&lt;/span&gt;   &lt;span class=&quot;nx&quot;&gt;git&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;@&lt;/span&gt;&lt;span class=&quot;nd&quot;&gt;gitee&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;com&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;chloneda&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;/&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;demo&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;git&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;fetch&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;
&lt;span class=&quot;nx&quot;&gt;gitee&lt;/span&gt;   &lt;span class=&quot;nx&quot;&gt;git&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;@&lt;/span&gt;&lt;span class=&quot;nd&quot;&gt;gitee&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;com&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;chloneda&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;/&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;demo&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;git&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;push&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;
&lt;span class=&quot;nx&quot;&gt;github&lt;/span&gt;  &lt;span class=&quot;nx&quot;&gt;git&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;@&lt;/span&gt;&lt;span class=&quot;nd&quot;&gt;github&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;com&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;chloneda&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;/&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;demo&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;git&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;fetch&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;
&lt;span class=&quot;nx&quot;&gt;github&lt;/span&gt;  &lt;span class=&quot;nx&quot;&gt;git&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;@&lt;/span&gt;&lt;span class=&quot;nd&quot;&gt;github&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;com&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;chloneda&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;/&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;demo&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;git&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;push&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;上传代码&lt;/p&gt;

&lt;p&gt;git add .&lt;/p&gt;

&lt;p&gt;git commit -m “update”&lt;/p&gt;

&lt;p&gt;提交到github&lt;/p&gt;

&lt;p&gt;git push github master&lt;/p&gt;

&lt;p&gt;提交到码云&lt;/p&gt;

&lt;p&gt;git push gitee master&lt;/p&gt;

&lt;p&gt;注意一般情况下master可以省略&lt;/p&gt;

&lt;p&gt;更新代码&lt;/p&gt;

&lt;p&gt;#从github拉取更新&lt;/p&gt;

&lt;p&gt;git pull github&lt;/p&gt;

&lt;p&gt;从gitee拉取更新&lt;/p&gt;

&lt;p&gt;git pull gitee&lt;/p&gt;

&lt;p&gt;拉取更新，有时候需要加master或者main或者其他分支名字，需要看config文件夹下的&lt;strong&gt;[branch “分支名字”]&lt;/strong&gt;，即用git pull github + 分支命令。&lt;/p&gt;

</description>
        <pubDate>Fri, 23 Jul 2021 00:00:00 +0800</pubDate>
        <link>www.xiangtao.net.cn/2021/07/git/</link>
        <guid isPermaLink="true">www.xiangtao.net.cn/2021/07/git/</guid>
        
        <category>git</category>
        
        
      </item>
    
      <item>
        <title>other guide</title>
        <description>&lt;h2 id=&quot;数学与计算科学学院研究生分会招新报名表&quot;&gt;数学与计算科学学院研究生分会招新报名表&lt;/h2&gt;
&lt;p&gt;点击下载：&lt;a href=&quot;https://github.com/xiang-tao/Strange-document/blob/master/%E6%95%B0%E5%AD%A6%E4%B8%8E%E8%AE%A1%E7%AE%97%E7%A7%91%E5%AD%A6%E5%AD%A6%E9%99%A2%E7%A0%94%E7%A9%B6%E7%94%9F%E5%88%86%E4%BC%9A%E6%8B%9B%E6%96%B0%E6%8A%A5%E5%90%8D%E8%A1%A8.docx&quot;&gt;Download&lt;/a&gt;&lt;/p&gt;

</description>
        <pubDate>Mon, 19 Jul 2021 00:00:00 +0800</pubDate>
        <link>www.xiangtao.net.cn/2021/07/Application/</link>
        <guid isPermaLink="true">www.xiangtao.net.cn/2021/07/Application/</guid>
        
        <category>other</category>
        
        
      </item>
    
      <item>
        <title>vim基本操作</title>
        <description>&lt;h1 id=&quot;vim基本操作命令&quot;&gt;vim基本操作命令&lt;/h1&gt;
&lt;h2 id=&quot;进入相关的编辑模式命令&quot;&gt;进入相关的编辑模式命令&lt;/h2&gt;
&lt;p&gt;基本上 vi/vim 共分为三种模式，分别是&lt;strong&gt;命令模式&lt;/strong&gt;（Command mode），&lt;strong&gt;输入模式&lt;/strong&gt;（Insert mode）和&lt;strong&gt;底线命令模式&lt;/strong&gt;（Last line mode）。 这三种模式的作用分别是：&lt;/p&gt;

&lt;p&gt;命令模式：
用户刚刚启动 vi/vim，便进入了命令模式。
此状态下敲击键盘动作会被Vim识别为命令，而非输入字符。比如我们此时按下i，并不会输入一个字符，i被当作了一个命令。&lt;/p&gt;
&lt;ol&gt;
  &lt;li&gt;i 为『从目前光标所在处输入』， I 为『在目前所在行的第一个非空格符处开始输入』&lt;/li&gt;
  &lt;li&gt;a 为『从目前光标所在的下一个字符处开始输入』， A 为『从光标所在行的最后一个字符处开始输入』&lt;/li&gt;
  &lt;li&gt;这是英文字母 o 的大小写。o 为在目前光标所在的下一行处输入新的一行； O 为在目前光标所在的上一行处输入新的一行！
命令模式只有一些最基本的命令，因此仍要依靠底线命令模式输入更多命令。&lt;/li&gt;
&lt;/ol&gt;

&lt;p&gt;输入模式:ESC，退出输入模式，切换到命令模式&lt;/p&gt;

&lt;p&gt;底线命令模式:&lt;/p&gt;

&lt;p&gt;在命令模式下按下:（英文冒号）就进入了底线命令模式。&lt;/p&gt;

&lt;p&gt;底线命令模式可以输入单个或多个字符的命令，可用的命令非常多。&lt;/p&gt;

&lt;p&gt;在底线命令模式中，基本的命令有（已经省略了冒号）：&lt;/p&gt;

&lt;p&gt;q 退出程序&lt;/p&gt;

&lt;p&gt;w 保存文件&lt;/p&gt;

&lt;h2 id=&quot;复制&quot;&gt;复制&lt;/h2&gt;
&lt;p&gt;yy  复制游标所在行整行 &lt;/p&gt;

&lt;p&gt;        2yy或y2y    复制 2 行&lt;/p&gt;

&lt;p&gt;        y^    复制至行首，或y0&lt;/p&gt;

&lt;p&gt;        y$    复制至行尾&lt;/p&gt;

&lt;p&gt;        yw    复制一个word&lt;/p&gt;

&lt;p&gt;        y2w    复制两个word &lt;/p&gt;

&lt;p&gt;        yG    复制至文件尾&lt;/p&gt;

&lt;p&gt;        y1G    复制至文件首&lt;/p&gt;

&lt;p&gt;当复制的行很多推荐下面的操作：&lt;/p&gt;

&lt;p&gt;即将９到15行的内容复制到16行后面&lt;/p&gt;

&lt;p&gt;：9，15 copy 16 或 ：9，15 co 16&lt;/p&gt;

&lt;h2 id=&quot;剪切&quot;&gt;剪切&lt;/h2&gt;
&lt;p&gt;dd    剪切游标所在行整行&lt;/p&gt;

&lt;p&gt;​        d^    剪切至行首，或d0&lt;/p&gt;

&lt;p&gt;​        d$    剪切至行尾&lt;/p&gt;

&lt;p&gt;​        dw    剪切一个word&lt;/p&gt;

&lt;p&gt;​        dG    剪切至文件尾&lt;/p&gt;

&lt;p&gt;当要剪切很多行推荐使用：&lt;/p&gt;

&lt;p&gt;：9，15 move 16  或 :9,15 m 16&lt;/p&gt;

&lt;p&gt;将第9行到第15行的文本内容移动到第16行的后面&lt;/p&gt;

&lt;h2 id=&quot;粘贴&quot;&gt;粘贴&lt;/h2&gt;
&lt;p&gt;小p:将复制的内容粘贴到光标所在的下一行&lt;/p&gt;

&lt;p&gt;大P:将复制的内容粘贴到光标所在的上一行&lt;/p&gt;

&lt;h2 id=&quot;光标位置&quot;&gt;光标位置&lt;/h2&gt;
&lt;p&gt;1.跳到文本的最后一行：按“G”,即“shift+g”&lt;/p&gt;

&lt;p&gt;2.跳到最后一行的最后一个字符 ： 先重复1的操作即按“G”，之后按“$”键，即“shift+4”。&lt;/p&gt;

&lt;p&gt;3.跳到第一行的第一个字符：先按两次“g”，&lt;/p&gt;

&lt;p&gt;4.跳转到当前行的第一个字符：在当前行按“0”。&lt;/p&gt;

&lt;h2 id=&quot;回退和前进&quot;&gt;回退和前进&lt;/h2&gt;
&lt;p&gt;u:回退一步&lt;/p&gt;

&lt;p&gt;crtl+r:前进一步&lt;/p&gt;

&lt;h2 id=&quot;光标移动&quot;&gt;光标移动&lt;/h2&gt;
&lt;p&gt;命令模式下：kjhl表示上下左右移动&lt;/p&gt;

&lt;p&gt;输入模式下:上下左右键进行移动&lt;/p&gt;

&lt;p&gt;可以在底线模式下输入命令：:n，进入到n行&lt;/p&gt;

&lt;h2 id=&quot;多行缩进和删除多行前面的空格&quot;&gt;多行缩进和删除多行前面的空格&lt;/h2&gt;
&lt;p&gt;删除空格：ctrl+v进入块模式，然后上下左右移动，选中多行以及多个空格，按d即可进行删除，注意此时上下左右移动只能用kjhl键．
多行缩进：&lt;/p&gt;
&lt;ol&gt;
  &lt;li&gt;ESC之后，ctrl+v进入多行行首选中模式&lt;/li&gt;
  &lt;li&gt;使用上下键进行上下移动，选中多行行首&lt;/li&gt;
  &lt;li&gt;shift+i，进入插入模式&lt;/li&gt;
  &lt;li&gt;连续敲击4个空格（注意在敲击空格按键的时候，注意这个时候不能够多行立即缩进，显示的是仅仅一行进行缩进，在执行第五步的时候，才会出现多行缩进的效果）&lt;/li&gt;
  &lt;li&gt;然后按esc按键，即可发现，你选中的行都缩进了&lt;/li&gt;
&lt;/ol&gt;

&lt;h2 id=&quot;多行注释&quot;&gt;多行注释：&lt;/h2&gt;
&lt;ol&gt;
  &lt;li&gt;首先按esc进入命令行模式下，按下Ctrl + v，进入列（也叫区块）模式;&lt;/li&gt;
  &lt;li&gt;在行首使用上下键选择需要注释的多行;&lt;/li&gt;
  &lt;li&gt;按下键盘（大写）“I”键，进入插入模式；&lt;/li&gt;
  &lt;li&gt;然后输入注释符（“//”、“#”等）;&lt;/li&gt;
  &lt;li&gt;最后按下“Esc”键。 注：在按下esc键后，会稍等一会才会出现注释，不要着急 ~~时间很短的&lt;/li&gt;
&lt;/ol&gt;

&lt;p&gt;需要注意的是除了输入#号之外，是可以输入任意字符和汉字的，该方案也可以用可视行+normal实现，具体做法是：&lt;/p&gt;
&lt;ol&gt;
  &lt;li&gt;按shift+v进入可视行，选中多行区域&lt;/li&gt;
  &lt;li&gt;按冒号进入底线模式，输入normal，如果是在多行前面加信息，就用I+信息，在尾部就用A+信息。例如normal I#，即加入#在多行的前面，normal A#，则在多行的尾部加入数据。&lt;/li&gt;
&lt;/ol&gt;

&lt;p&gt;注意：但是要删除多行的相同信息，比如同时去掉#，那么一般用可视块选中按d就可以了，总是可视块和可视行功能很强大，实现相应的功能需要自己总结分析。可视块的功能可能更加强大，它可以在任何位置添加多行相同的信息。&lt;/p&gt;

&lt;h2 id=&quot;多行删除&quot;&gt;多行删除&lt;/h2&gt;
&lt;p&gt;1.首先在命令模式下，输入“：set nu”显示行号； 2.通过行号确定你要删除的行； 3.命令输入“：32,65d”,回车键，32-65行就被删除了，很快捷吧
如果无意中删除错了，可以使用‘u’键恢复（命令模式下）&lt;/p&gt;

&lt;h2 id=&quot;其他说明&quot;&gt;其他说明&lt;/h2&gt;
&lt;p&gt;,sa:全选，然后按yy可以复制全部内容&lt;/p&gt;

&lt;p&gt;crtl+o:光标返回至前一个位置&lt;/p&gt;

&lt;p&gt;crtl+i:光标返回至后一个位置&lt;/p&gt;

&lt;p&gt;注意：ctrl+v进入可视块，按hjkl进行选择区域，但是选中的是矩形形状，按v是可视界面，按hjkl可进行选择区域，就像鼠标选择一样，选择后按y可以复制该区域，按d可以剪切该区域。与按2yy,2dd等进行相关行的复制不一样的是粘贴过程，具体不一样的地方操作即可看见，主要是格式各位置的不同。与用2yy及2dd相似的操作是可视行模式，按shift+v进入，然后通过j与k键实现选中多行，同理按y复制，按d进行剪切，效果与2yy这些是类似的。&lt;/p&gt;

&lt;h2 id=&quot;分屏操作&quot;&gt;分屏操作&lt;/h2&gt;
&lt;p&gt;:sp 文件名，是实现上下分屏，可通过crtl+j与k键实现屏幕光标的移动，其中sp是split的缩写，可以直接用:split。&lt;/p&gt;

&lt;p&gt;:vsp 文件名，实现左右分屏，同样可以通过ctrl+h与l进行屏幕光标位置移动&lt;/p&gt;

&lt;p&gt;创建新的未命名的分屏可以直接使用:new或:vsp new&lt;/p&gt;

&lt;p&gt;也可以直接用:vsp，则打开和本体一样的副本，即两个屏幕信息一样，且无论光标在那个分屏上进行操作时候，此时两个屏幕都会进行同样的操作。&lt;/p&gt;

&lt;p&gt;如何关闭当前分屏：使用:q，我的可以用,q即可，也可以用:close，只留下当前分屏可以用:only&lt;/p&gt;

&lt;p&gt;值得注意的是，我们一般都喜欢左右分屏，所以基本上都是使用:vsp命令，但是当打开的新文件总是在左边，那么你需要在运行:vsp命令前，运行:set splitright命令。这样的操作无疑是很麻烦的，因此可以自己重新设置，vimrc的设置中加入如下代码即可：&lt;/p&gt;

&lt;p&gt;map sl :set splitright&lt;CR&gt;:vsplit&lt;CR&gt;&lt;/CR&gt;&lt;/CR&gt;&lt;/p&gt;

&lt;p&gt;map sh :set nosplitright&lt;CR&gt;:vsplit&lt;CR&gt;&lt;/CR&gt;&lt;/CR&gt;&lt;/p&gt;

&lt;p&gt;map sk :set nosplitbelow&lt;CR&gt;:split&lt;CR&gt;&lt;/CR&gt;&lt;/CR&gt;&lt;/p&gt;

&lt;p&gt;map sj :set splitbelow&lt;CR&gt;:split&lt;CR&gt;&lt;/CR&gt;&lt;/CR&gt;&lt;/p&gt;

&lt;p&gt;即实现了s+hjkl实现上下左右快速分屏。但是实现分屏后的内容是一样的，因此可以使用:e 文件名来打开新的文件。&lt;/p&gt;

&lt;p&gt;下面的配置是实现分屏幕的大小控制，通过上下左右键来控制，但是这个设置后，用命令:e 文件名打开的文件就不能够通过上下左右键来时间移动，但是可以继续用:e 文件名的方式访问不同路径下的文件，无法直接移动并不重要，可以用下面讲的标签页来实现移动，而且屏幕上方还会显示对应标签的文件名。&lt;/p&gt;

&lt;p&gt;map &lt;up&gt; :res +5&lt;CR&gt;
		map &lt;down&gt; :res -5&lt;CR&gt;
		map &lt;left&gt; :vertical resize -5&lt;CR&gt;
		map &lt;right&gt; :vertical resize +5&lt;CR&gt;&lt;/CR&gt;&lt;/right&gt;&lt;/CR&gt;&lt;/left&gt;&lt;/CR&gt;&lt;/down&gt;&lt;/CR&gt;&lt;/up&gt;&lt;/p&gt;

&lt;h2 id=&quot;标签页&quot;&gt;标签页&lt;/h2&gt;
&lt;p&gt;新建标签页：使用:tabe 名字，若用:tabe则会创建未命名的标签页，同时也可以用:tabe 文件名，打开已有的文件标签。实现标签的移动要用:+tabnext右移，:-tabnext实现左移，也可以用下面的配置文件实现快捷方式移动：&lt;/p&gt;

&lt;p&gt;tn打开新的标签&lt;/p&gt;

&lt;p&gt;th左移标签，tl右移标签&lt;/p&gt;

&lt;p&gt;map tn :tabe&lt;CR&gt;       
		map th :-tabnext&lt;CR&gt;
		map tl :+tabnext&lt;CR&gt;&lt;/CR&gt;&lt;/CR&gt;&lt;/CR&gt;&lt;/p&gt;

&lt;p&gt;下面是系统自带的一些关于标签页快捷键的操作功能&lt;/p&gt;

&lt;p&gt;:tabn或gt：顺序切换到下一个标签页&lt;/p&gt;

&lt;p&gt;:tabp或gT：逆序切换到上一个标签页&lt;/p&gt;

&lt;p&gt;:tabfirst或:tabr：移动到第一个标签页&lt;/p&gt;

&lt;p&gt;:tablast：移动到最后一个标签页&lt;/p&gt;

&lt;p&gt;:tabm n：将本标签页的数字变为n，即交换本标签页和第n的标签页的位置。&lt;/p&gt;

&lt;p&gt;##vim书签Mark&lt;/p&gt;

&lt;p&gt;参考&lt;a href=&quot;https://blog.csdn.net/rudy_yuan/article/details/83004721&quot;&gt;mark详解&lt;/a&gt;&lt;/p&gt;

&lt;h2 id=&quot;代码折叠&quot;&gt;代码折叠&lt;/h2&gt;
&lt;p&gt;目前我的vim配置文档是以缩进来进行代码折叠，光标进入到要折叠的起始行，按zc是折叠，zo是打开折叠，也可以直接用za，即若是折叠状态则打开折叠，若是未折叠状态则折叠相应的代码。还有许多折叠方式，需要自行配置，可自行百度，或者打开我的vim找到折叠设置的地方自行设计。&lt;/p&gt;

&lt;h2 id=&quot;k-vim配置基本信息&quot;&gt;k-vim配置基本信息&lt;/h2&gt;

&lt;p&gt;注意, 以下 ‘,’ 代表&lt;leader&gt;&lt;/leader&gt;&lt;/p&gt;

&lt;ol&gt;
  &lt;li&gt;可以自己修改vimrc中配置，决定是否开启鼠标&lt;/li&gt;
&lt;/ol&gt;

&lt;p&gt;set mouse-=a           “ 鼠标暂不启用, 键盘党….
set mouse=a            “ 开启鼠标&lt;/p&gt;

&lt;ol&gt;
  &lt;li&gt;退出vim后，内容显示在终端屏幕, 可以用于查看和复制, 如果不需要可以关掉
好处：误删什么的，如果以前屏幕打开，可以找回….惨痛的经历&lt;/li&gt;
&lt;/ol&gt;

&lt;p&gt;set t_ti= t_te=&lt;/p&gt;

&lt;ol&gt;
  &lt;li&gt;可以自己修改vimrc决定是否使用方向键进行上下左右移动，默认关闭，强迫自己用 hjkl，可以注解
hjkl  上下左右&lt;/li&gt;
&lt;/ol&gt;

&lt;p&gt;map &lt;Left&gt; &lt;Nop&gt;&lt;/Nop&gt;&lt;/Left&gt;&lt;/p&gt;

&lt;p&gt;map &lt;Right&gt; &lt;Nop&gt;&lt;/Nop&gt;&lt;/Right&gt;&lt;/p&gt;

&lt;p&gt;map &lt;Up&gt; &lt;Nop&gt;&lt;/Nop&gt;&lt;/Up&gt;&lt;/p&gt;

&lt;p&gt;map &lt;Down&gt; &lt;Nop&gt;&lt;/Nop&gt;&lt;/Down&gt;&lt;/p&gt;

&lt;ol&gt;
  &lt;li&gt;上排F功能键&lt;/li&gt;
&lt;/ol&gt;

&lt;p&gt;F1 废弃这个键,防止调出系统帮助&lt;/p&gt;

&lt;p&gt;F2 set nu/nonu,行号开关，用于鼠标复制代码用&lt;/p&gt;

&lt;p&gt;F3 set list/nolist,显示可打印字符开关&lt;/p&gt;

&lt;p&gt;F4 set wrap/nowrap,换行开关&lt;/p&gt;

&lt;p&gt;F5 set paste/nopaste,粘贴模式paste_mode开关,用于有格式的代码粘贴&lt;/p&gt;

&lt;p&gt;F6 syntax on/off,语法开关，关闭语法可以加快大文件的展示&lt;/p&gt;

&lt;p&gt;F9 tagbar&lt;/p&gt;

&lt;p&gt;F10 运行当前文件(quickrun)&lt;/p&gt;

&lt;ol&gt;
  &lt;li&gt;分屏移动&lt;/li&gt;
&lt;/ol&gt;

&lt;p&gt;ctrl + j/k/h/l   进行上下左右窗口跳转,不需要ctrl+w+jkhl&lt;/p&gt;

&lt;ol&gt;
  &lt;li&gt;搜索
space 空格，进入搜索状态
/       同上
,/      去除匹配高亮&lt;/li&gt;
&lt;/ol&gt;

&lt;h2 id=&quot;终端的基本快捷键&quot;&gt;终端的基本快捷键&lt;/h2&gt;

&lt;p&gt;ctrl+alt+t是打开一个terminal&lt;/p&gt;

&lt;p&gt;Alt + F4 关闭终端 ，即所有标签页，exit命令可关闭当前标签页&lt;/p&gt;

&lt;p&gt;ctrl+shift+t是在terminal中打开多个标签&lt;/p&gt;

&lt;p&gt;Shift+Ctrl+W 关闭当前标签页&lt;/p&gt;

&lt;p&gt;Alt + n 切换到标签n&lt;/p&gt;

&lt;p&gt;进入退出终端全屏：f11&lt;/p&gt;
</description>
        <pubDate>Sun, 23 May 2021 00:00:00 +0800</pubDate>
        <link>www.xiangtao.net.cn/2021/05/vim/</link>
        <guid isPermaLink="true">www.xiangtao.net.cn/2021/05/vim/</guid>
        
        <category>linux</category>
        
        
      </item>
    
      <item>
        <title>ubuntu下基于linux的一些常用终端命令</title>
        <description>&lt;h1 id=&quot;0-自动补全tab键&quot;&gt;0. 自动补全：Tab键&lt;/h1&gt;

&lt;p&gt;如果有歧义，则再按一下Tab键盘就有多种选择。&lt;/p&gt;

&lt;h1 id=&quot;1-ls命令&quot;&gt;1. ls命令&lt;/h1&gt;

&lt;p&gt;-a:显示文件下所有文件包括隐藏文件，即：ls -a&lt;/p&gt;

&lt;p&gt;-l:以列表的形式展现文件信息，包含了多种信息&lt;/p&gt;

&lt;p&gt;-h:结合-l使用，将文件信息中的文件大小显示为kb,即：ls -lh&lt;/p&gt;

&lt;p&gt;与通配符的连用：*表示任意多个字符，?表示一个字符&lt;/p&gt;

&lt;p&gt;[]用法：ls [abc]cc.txt,显显示abc中任意一个与cc.txt结合的文件名字，即a或b或c，或者用[a-f]或[1-4]等。&lt;/p&gt;

&lt;h1 id=&quot;2cd命令&quot;&gt;2.cd命令&lt;/h1&gt;

&lt;p&gt;切换至主目录：cd 或 cd ~;(~表示用户主目录)&lt;/p&gt;

&lt;p&gt;切换至根目录：cd /&lt;/p&gt;

&lt;p&gt;cd - 表示刚使用过的两个目录之间来回切换。&lt;/p&gt;

&lt;p&gt;cd .. 返回上一级目录，cd . 当前目录&lt;/p&gt;

&lt;h1 id=&quot;3相对路径和绝对路径&quot;&gt;3.相对路径和绝对路径&lt;/h1&gt;

&lt;p&gt;相对路径：是在当前目录下进行，例如: cd ./文件名 或者 cd ../文件名 或 cd ../../文件名&lt;/p&gt;

&lt;p&gt;绝对路径：一般是以 / 或 ~ 开始，表示从根目录开始或者从主目录开始然后一级一级的往下进行，例如：cd /文件名/文件名  cd ~/文件名/文件名  等。&lt;/p&gt;

&lt;h1 id=&quot;4touch命令&quot;&gt;4.touch命令&lt;/h1&gt;

&lt;p&gt;touch 文件名：如果文件存在则修改文件的创建时间，如果文件不存在则创建该文件。&lt;/p&gt;

&lt;p&gt;touch 文件名1 文件名2：可以同时创建多个文档。&lt;/p&gt;

&lt;p&gt;touch 路径名/文件名：在对应的路径名下创建文件名。&lt;/p&gt;

&lt;h1 id=&quot;5mkdir命令&quot;&gt;5.mkdir命令&lt;/h1&gt;

&lt;p&gt;mkdir 文件名：创建一个目录&lt;/p&gt;

&lt;p&gt;mddir 文件名1 文件名2： 创建多个目录。&lt;/p&gt;

&lt;p&gt;mkdir -p 文件名：创建嵌套的多个级目录 例如：mkdir -p a/b/c&lt;/p&gt;

&lt;p&gt;mkdir 路径名/目录名：在对应的目录路径下创建目录&lt;/p&gt;

&lt;h1 id=&quot;6rm命令注意该命令删除文件或者目录时候不可恢复&quot;&gt;6.rm命令（注意该命令删除文件或者目录时候不可恢复&lt;/h1&gt;

&lt;p&gt;rm 文档名：删除文档&lt;/p&gt;

&lt;p&gt;rm 文档名1 文档名2：删除多个文档&lt;/p&gt;

&lt;p&gt;rm -r 目录名：删除目录要加上-r&lt;/p&gt;

&lt;p&gt;rm -rf 目录名：加上 -f 无需提示，直接强行删除目录&lt;/p&gt;

&lt;p&gt;值得注意的是rm命令也可以和通配符结合使用，即* ? []等，见ls命令的描述。&lt;/p&gt;

&lt;h1 id=&quot;7tree命令&quot;&gt;7.tree命令&lt;/h1&gt;

&lt;p&gt;tree:显示当前目录下的目录分支结构&lt;/p&gt;

&lt;p&gt;tree 路径名:显示路径名下的文件目录分支结构&lt;/p&gt;

&lt;p&gt;tree -d:只显示目录，不显示文件&lt;/p&gt;

&lt;h1 id=&quot;8cp命令&quot;&gt;8.cp命令&lt;/h1&gt;

&lt;p&gt;cp 某文件路径/文件名 ./新的文件名：将某个路径下的文件复制到 ./ 下，即当前路径下。&lt;/p&gt;

&lt;p&gt;cp 某文件路径/文件名 .：表示将某路径下的文件复制到当前文件夹下名字不变。&lt;/p&gt;

&lt;p&gt;cp -i 某文件路径/文件名 ./新的文件名: -i 命令将会给出相关提示信息，例如相同文件是否覆盖等。&lt;/p&gt;

&lt;p&gt;cp -r 目录名 目录名：复制目录加上 -r。（会将复制目录文件夹下的所有文件一并复制过去）&lt;/p&gt;

&lt;p&gt;cp -r 目录名/{file1,file2,…} 目录名：可复制一个目录下的多个文档。&lt;/p&gt;

&lt;h1 id=&quot;9mv命令&quot;&gt;9.mv命令&lt;/h1&gt;

&lt;p&gt;mv 源文件 目标文件：移动文件夹或者目录/文件夹或目录重命名（相当于剪切）&lt;/p&gt;

&lt;p&gt;mv命令的重命名：mv 源文件名 新的文件名，注意新文件名如果有相同的文件名与之一致会直接覆盖，不会提示，这样有危险，因此：&lt;/p&gt;

&lt;p&gt;mv -i :加上 -i 就有提示信息了。&lt;/p&gt;

&lt;h1 id=&quot;10cat和more命令&quot;&gt;10.cat和more命令&lt;/h1&gt;

&lt;p&gt;cat 文件名：显示文件内容（一次性完整显示文档内容，当文本内容较少时候用cat，较多的内容文档用more来显示最好）&lt;/p&gt;

&lt;p&gt;cat -b 文件名：加入 -b 后会显示数据的行号(不包括空格所在的行)。&lt;/p&gt;

&lt;p&gt;cat -n 文件名：加入 -n 后会包括空格在内的所有数据行号都会显示。&lt;/p&gt;

&lt;p&gt;more 文件名：显示文件内容（会分部分显示，显示百分比内容即分屏显示，需要按 空格 显示手册下一屏，enter滚动下一行，b回滚一屏，f前滚一屏，q退出）&lt;/p&gt;

&lt;h1 id=&quot;11grep命令&quot;&gt;11.grep命令&lt;/h1&gt;

&lt;p&gt;grep 搜索内容（比如：numpy） 文件夹名：终端就会将文档中有关numpy的行展示出来，并将numpy高亮显示出来。&lt;/p&gt;

&lt;p&gt;grep -n 搜索内容（比如：numpy） 文件名：加入 -n 后会显示所在的行号。&lt;/p&gt;

&lt;p&gt;grep -v 搜索内容（比如：numpy） 文件名：加入 -v 后显示不包含numpy所在的行中的内容。&lt;/p&gt;

&lt;p&gt;grep -vn 搜索内容（比如：numpy） 文件名：与 -v 相比，加入 -vn后呢会显示行号，即显示不包含numpy所在行内容，同时显示行号。&lt;/p&gt;

&lt;p&gt;grep -i 搜索内容（比如：numpy） 文件名：加入 -i 后会忽略大小写，比如搜索的是numpy，那么NUmpY也会显示高亮。&lt;/p&gt;

&lt;p&gt;注意：如果搜索的内容有空格，需要加入引号，将搜索内容引号包裹起来，例如：&lt;/p&gt;

&lt;p&gt;grep -vn “hello numpy” 文件名。&lt;/p&gt;

&lt;p&gt;模式查找：行首查找（即只查找行首的内容）&lt;/p&gt;

&lt;p&gt;grep ^numpy 文件名：加入 ^ 符号即可至搜索行首的numpy并高亮。&lt;/p&gt;

&lt;p&gt;同理行尾查找，在后面加上 $ 符号即可，例如：&lt;/p&gt;

&lt;p&gt;grep numpy$ 文件名：在numpy后面加上 $ 符号。&lt;/p&gt;

&lt;p&gt;注意：行首行尾查找也可与 -i -v -n 等命令结合使用。&lt;/p&gt;

&lt;h1 id=&quot;12echo命令&quot;&gt;12.echo命令&lt;/h1&gt;

&lt;p&gt;echo 任意的内容：例如：echo hello会显示hello,  echo hello world则会显示hello world,该命令的用处主要是与重定向结合使用。&lt;/p&gt;

&lt;h1 id=&quot;13重定向-and&quot;&gt;13.重定向&amp;gt; and »&lt;/h1&gt;

&lt;p&gt;linux允许将命令执行结果重定向到一个文件&lt;/p&gt;

&lt;p&gt;将本应显示在终端上的内容 输出/追加 到指定的文件夹中，其中：&lt;/p&gt;

&lt;p&gt;&amp;gt;:表示输出，会覆盖文件原有的内容&lt;/p&gt;

&lt;p&gt;&amp;gt;&amp;gt;:表示追加，会将内容追加到已有文件的末尾，例如：&lt;/p&gt;

&lt;p&gt;echo hello python &amp;gt; a:会将hello写入到文件a中，（如果没有a这个文件，则会新建一个文件a）&lt;/p&gt;

&lt;p&gt;再比如：ls -lh会以列表形式显示相关信息，这时候用：&lt;/p&gt;

&lt;p&gt;ls -lh &amp;gt; a:就会将ls -lh显示的信息写入到文件a中。但是这个时候会把hello world内容覆盖掉，如果不要覆盖，那就用 » 符号即可：ls -lh » a&lt;/p&gt;

&lt;p&gt;还有很多结合使用命令的内容，例如(此处以文件a 为名)：&lt;/p&gt;

&lt;p&gt;tree » a , ls » a ,等&lt;/p&gt;

&lt;h1 id=&quot;14管道&quot;&gt;14.管道|&lt;/h1&gt;

&lt;p&gt;命令 | 命令：例如：&lt;/p&gt;

&lt;p&gt;ls -lah | more  or ls -lah | grep hello等，左边的命令将输出的信息传递给右边的命令进行操作，具体使用很广泛可以自行百度。&lt;/p&gt;

&lt;h1 id=&quot;5关机重启命令shutdown&quot;&gt;5.关机重启命令shutdown&lt;/h1&gt;

&lt;p&gt;shutdown : 一分钟后关机，可以在一分钟内使用 shutdown -c取消关机&lt;/p&gt;

&lt;p&gt;shutdown -r now:加入 -r 怎是重启，now马上重启&lt;/p&gt;

&lt;p&gt;shutdown 20:30  :  将在晚上八点半关机 或 shutdown -h 20:30&lt;/p&gt;

&lt;p&gt;shutdown +10 : 将在10分钟后关机 或 shutdown -h +10&lt;/p&gt;

&lt;p&gt;shutdown -h now : 立即关机 或 shutdown now&lt;/p&gt;

&lt;h1 id=&quot;16chmod命令&quot;&gt;16.chmod命令&lt;/h1&gt;

&lt;p&gt;chmod +/-rwx 文件名/目录名：其中 + 表示怎家权限，- 表示减少权限，r w x分别表示可读 可写 可执行权限。&lt;/p&gt;

&lt;p&gt;可通过ls -l显示的信息查看相关文件的权限，具体请看b站上视频讲解或者百度。&lt;/p&gt;

&lt;p&gt;可执行权限可通过 ./文件名 执行，例如c++编译后的a.out文件等。同时一般的文件夹都要有可执行的权限，否则利用cd ls等命令无法进入文件或者查看文件信息等。&lt;/p&gt;

&lt;h2 id=&quot;重要的内容&quot;&gt;重要的内容&lt;/h2&gt;

&lt;p&gt;相关权限的值：r  :  4     w : 2   x  :  1，那么7=1+2+4表示可执行可读可写，6=4+2表示可读可写等。&lt;/p&gt;

&lt;p&gt;chmod -R 777 文件名/目录名：加入 -R 是将文件夹下所有递归的文件权限一并修改，而777表示本身用户，组用户，其他用户的权限均为7,即拥有可读可写可执行权限（但是通过鼠标执行时候我自己的电脑把我当作了其他用户）。&lt;/p&gt;

&lt;h1 id=&quot;17压缩解压相关命令rar-tar-zip-targz&quot;&gt;17.压缩解压相关命令rar tar zip tar.gz&lt;/h1&gt;

&lt;h2 id=&quot;打包和解包&quot;&gt;打包和解包&lt;/h2&gt;

&lt;p&gt;打包文件：tar -cvf 打包的文件名.tar 被打包的文件(或者是 路径名/被打包的文件)&lt;/p&gt;

&lt;p&gt;例如：tar -cvf py.tar 1.py 2.py 3.py:即将折三个文件打包在py.tar中。&lt;/p&gt;

&lt;p&gt;注意：此处的打包不等于压缩。&lt;/p&gt;

&lt;p&gt;解包文件：tar -xvf 打包文件名.tar&lt;/p&gt;

&lt;h2 id=&quot;参数说明&quot;&gt;参数说明：&lt;/h2&gt;

&lt;p&gt;c : 生成档案文件，创建打包文件&lt;/p&gt;

&lt;p&gt;x : 解开档案文件&lt;/p&gt;

&lt;p&gt;v : 列出解压或者压缩时候的详细过程&lt;/p&gt;

&lt;p&gt;f : 指定档案文件名称，f后面一定是.tar文件，所以必须放在选项最后。&lt;/p&gt;

&lt;p&gt;注意f必须放在选项最后&lt;/p&gt;

&lt;h2 id=&quot;压缩和解压gzip&quot;&gt;压缩和解压gzip&lt;/h2&gt;

&lt;p&gt;压缩文件： tar -zcvf 打包文件.tar.gz 被压缩的文件（或某路径下的被压缩文件）&lt;/p&gt;

&lt;p&gt;例如：tar -zcvf py.tar.gz *.py&lt;/p&gt;

&lt;p&gt;解压文件：tar -zxvf 打包的文件.tar.gz&lt;/p&gt;

&lt;p&gt;解压到指定的目录：tar -zxvf 打包的文件.tar.gz -C 目标路径&lt;/p&gt;

&lt;p&gt;注意 -C 后面的目标路径必须存在，还有就是此处的是大写C.&lt;/p&gt;

&lt;p&gt;此处多了 -z 是tar命令直接调用了gzip命令&lt;/p&gt;

&lt;h2 id=&quot;linux下的另为一种压缩格式bzip2&quot;&gt;linux下的另为一种压缩格式bzip2:&lt;/h2&gt;

&lt;p&gt;与gzip几乎一样，只是在命令上和后缀名上有一点变化：&lt;/p&gt;

&lt;p&gt;例如压缩文件：tar -jcvf py.tar.bz2 *.py&lt;/p&gt;

&lt;p&gt;解压文件：tar -jxvf 打包的文件.tar.bz2&lt;/p&gt;

&lt;p&gt;除此之外，关于解压.zip与.rar文件的命令是unzip与unrar:&lt;/p&gt;

&lt;h2 id=&quot;关于zip&quot;&gt;关于zip:&lt;/h2&gt;

&lt;p&gt;-o选项，不询问用户，直接覆盖源文件&lt;/p&gt;

&lt;p&gt;-d选项，用户可以指定一个解压到指定目录&lt;/p&gt;

&lt;p&gt;例如：unzip 解压文件名&lt;/p&gt;

&lt;p&gt;unzip -d 解压路径 解压文件名&lt;/p&gt;

&lt;p&gt;unzip -o -d 解压路径 解压文件名&lt;/p&gt;

&lt;p&gt;用命令压缩文件如：zip -r test.zip 01.py 02.py&lt;/p&gt;

&lt;p&gt;再比如： zip -r test1.zip aa将目录aa压缩名为test1.zip&lt;/p&gt;

&lt;p&gt;-r是递归压缩，即内部文件一并压缩&lt;/p&gt;

&lt;h2 id=&quot;关于rar&quot;&gt;关于rar:&lt;/h2&gt;

&lt;p&gt;压缩文件：rar a -r bb.rar *py，将后缀含有py的文件压缩到bb.rar中。&lt;/p&gt;

&lt;p&gt;解压文件：unrar x 文件名&lt;/p&gt;

&lt;p&gt;a:添加到压缩文件&lt;/p&gt;

&lt;p&gt;-r 递归处理&lt;/p&gt;

&lt;p&gt;x 以绝对路径解压文件&lt;/p&gt;

&lt;p&gt;说明：rar一般是windows常用的压缩，zip则是mac常用的压缩，linux常用的是tar.gz,但是遗憾的是该后缀似乎在另外的系统上难以解压，但是zip是三个系统都支持的格式，因此一般用zip.还有就是关于一些压缩文件来自于windows时候是乱码，可以通过一定的编码格式解决，但是解压命令unar是一款很厉害的linux的解压神器，后缀名为rar,zip等windows的压缩文件都能够正确解压，还会自动封装到一个文件夹中，且不会乱码，用法是：unar 压缩文件名&lt;/p&gt;

&lt;h2 id=&quot;linux下最强解压unar命令&quot;&gt;linux下最强解压：unar命令&lt;/h2&gt;
&lt;p&gt;unar + 文件名&lt;/p&gt;

&lt;p&gt;可以解压来自linux windows mac三个系统下的压缩文件，不会乱码.&lt;/p&gt;

&lt;p&gt;除此之外，unzip -O cp936 + 文件名也可以解压一些乱码文件，解压后不会乱码，这个和unar命令之间可以相互合作使用，有时候他们是互补的（因为我遇到过用unzip -O cp936解压仍然是乱码，但是用unar解压就正常了，也同时遇到过unar解压仍是乱码，但是用cp396解压正常，因此优先选择用unar，后面可以再试试其他方法），unzip -O GBK，unzip -O GB18030或者用unar　-e GBK 也是可行的，都可以说明字体编码问题．此外lsar + 文件名可以看到解压文件内部内容，也可以用lsar -e GBK+文件名查看内容．unar -p 123456 test.zip可以指定解压密码（123456）.unar test.zip -o /home/dir/  指定解压路径.&lt;/p&gt;

&lt;h1 id=&quot;18apt简介&quot;&gt;18.apt简介&lt;/h1&gt;

&lt;p&gt;安装软件：sudo apt install 软件名&lt;/p&gt;

&lt;p&gt;卸载软件：sudo apt remove 软件名&lt;/p&gt;

&lt;p&gt;更新软件：sudo apt upgrade&lt;/p&gt;

&lt;h1 id=&quot;19which命令&quot;&gt;19.which命令&lt;/h1&gt;

&lt;p&gt;which 软件名　　例如：which python3  可查到python3的安装路径&lt;/p&gt;

&lt;h1 id=&quot;20ubuntu更新相关命令&quot;&gt;20.ubuntu更新相关命令&lt;/h1&gt;

&lt;p&gt;更新软件源&lt;/p&gt;

&lt;p&gt;apt-get update&lt;/p&gt;

&lt;p&gt;更新升级所有软件&lt;/p&gt;

&lt;p&gt;apt-get upgrade&lt;/p&gt;

&lt;p&gt;更新某个软件&lt;/p&gt;

&lt;p&gt;apt-get upgrade 名&lt;/p&gt;

&lt;p&gt;列出可更新的软件&lt;/p&gt;

&lt;p&gt;apt list --upgradable&lt;/p&gt;

&lt;p&gt;升级系统版本(Ubuntu的升级)&lt;/p&gt;

&lt;p&gt;apt-get dist-upgrade&lt;/p&gt;

&lt;p&gt;安装一个软件包&lt;/p&gt;

&lt;p&gt;apt-get install package_name&lt;/p&gt;

&lt;p&gt;删除一个软件包&lt;/p&gt;

&lt;p&gt;apt-get remove package&lt;/p&gt;

&lt;p&gt;列举其他apt-get 命令&lt;/p&gt;

&lt;p&gt;apt-get help&lt;/p&gt;

&lt;p&gt;一般来说。更新完成之后会有一些不需要的旧组件需要清除。此时使用&lt;/p&gt;

&lt;p&gt;sudo apt autoremove即可完成清理。&lt;/p&gt;

&lt;h1 id=&quot;ubuntu如何彻底卸载一个软件&quot;&gt;ubuntu如何彻底卸载一个软件&lt;/h1&gt;

&lt;p&gt;apt-get的卸载相关的命令有remove/purge/autoremove/clean/autoclean等。具体来说：&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;apt-get purge / apt-get –purge remove&lt;/strong&gt;&lt;/p&gt;

&lt;p&gt;删除已安装包（不保留配置文件)。&lt;/p&gt;

&lt;p&gt;如软件包a，依赖软件包b，则执行该命令会删除a，而且不保留配置文件&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;apt-get autoremove&lt;/strong&gt;&lt;/p&gt;

&lt;p&gt;删除为了满足依赖而安装的，但现在不再需要的软件包（包括已安装包），保留配置文件。&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;apt-get remove&lt;/strong&gt;&lt;/p&gt;

&lt;p&gt;删除已安装的软件包（保留配置文件），不会删除依赖软件包，且保留配置文件。&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;apt-get autoclean&lt;/strong&gt;&lt;/p&gt;

&lt;p&gt;APT的底层包是dpkg, 而dpkg 安装Package时, 会将 *.deb 放在 /var/cache/apt/archives/中，apt-get autoclean 只会删除 /var/cache/apt/archives/ 已经过期的deb。&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;apt-get clean&lt;/strong&gt;&lt;/p&gt;

&lt;p&gt;使用 apt-get clean 会将 /var/cache/apt/archives/ 的 所有 deb 删掉，可以理解为 rm /var/cache/apt/archives/*.deb。&lt;/p&gt;

&lt;p&gt;那么如何彻底卸载软件呢？&lt;/p&gt;

&lt;p&gt;具体来说可以运行如下命令：&lt;/p&gt;

&lt;p&gt;删除软件及其配置文件&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;apt-get –purge remove package&lt;/strong&gt;&lt;/p&gt;

&lt;p&gt;删除没用的依赖包&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;apt-get autoremove package&lt;/strong&gt;&lt;/p&gt;

&lt;p&gt;此时dpkg的列表中有“rc”状态的软件包，可以执行如下命令做最后清理：&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;dpkg -l |grep ^rc|awk '{print $2}' |sudo xargs dpkg -P&lt;/strong&gt;&lt;/p&gt;

&lt;p&gt;如果不知道要删除软件的具体名称，可以使用&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;dpkg --get-selections | grep ‘软件相关名称’&lt;/strong&gt;&lt;/p&gt;

&lt;p&gt;原文链接：https://blog.csdn.net/get_set/article/details/51276609/&lt;/p&gt;
</description>
        <pubDate>Mon, 17 May 2021 00:00:00 +0800</pubDate>
        <link>www.xiangtao.net.cn/2021/05/ubuntu2/</link>
        <guid isPermaLink="true">www.xiangtao.net.cn/2021/05/ubuntu2/</guid>
        
        <category>linux</category>
        
        
      </item>
    
      <item>
        <title>ubuntu下一些常用工具的安装</title>
        <description>&lt;h1 id=&quot;ubuntu中谷歌浏览器的安装&quot;&gt;ubuntu中谷歌浏览器的安装&lt;/h1&gt;
&lt;h2 id=&quot;第一步下载谷歌浏览器&quot;&gt;第一步：下载谷歌浏览器&lt;/h2&gt;
&lt;p&gt;直接下载谷歌：&lt;a href=&quot;https://dl.google.com/linux/direct/google-chrome-stable_current_amd64.deb&quot;&gt;下载链接linux版本&lt;/a&gt;
        间接下载谷歌：&lt;a href=&quot;https://www.google.cn/chrome/thank-you.html?installdataindex=empty&amp;amp;statcb=0&amp;amp;defaultbrowser=0&quot;&gt;googel&lt;/a&gt;&lt;/p&gt;

&lt;h2 id=&quot;第二步在下载谷歌安装包所在的文件中打开终端&quot;&gt;第二步：在下载谷歌安装包所在的文件中打开终端&lt;/h2&gt;
&lt;h2 id=&quot;第三步依次执行如下命令即可&quot;&gt;第三步依次执行如下命令即可：&lt;/h2&gt;
&lt;p&gt;sudo apt install libappindicator1 libindicator7          //这是安装谷歌之前需要安装的两个包，libappindicator1 libindicator7&lt;/p&gt;

&lt;p&gt;sudo dpkg -i google-chrome-stable_current_amd64.deb      //使用sudo dpkg -i + deb文件名字安装&lt;/p&gt;

&lt;p&gt;或许所有的deb文件都可以在ubantu中进行这样方式的安装，比如ubuntu下linux版本的qq，下载后缀名为deb的qq安装包然后用dpkg或者gdebi命令进行安装即可&lt;/p&gt;

&lt;p&gt;sudo apt -f install（常用）或者sudo apt-get -f install    //安装过程可能会提示一些错误，比如依赖关系等，因此需要执行此命令，可以解决相关错误&lt;/p&gt;

&lt;p&gt;脚下留心：dpkg安装包和apt安装命令一致，一般来说在ubuntu中dpkg对deb文件进行安装很不错，但是或多或少会出现安装依赖错误及一些难以预测的问题，而gdebi则是dpkg的升级版，可以直接解决相关的依赖问题，而不用再用sudo apt -f install命令进行操作，详细见wps的安装过程用到了gdebi.(安装gdepi：sudo apt install gdebi)&lt;/p&gt;

&lt;h1 id=&quot;ubuntu中搜狗输入法的安装&quot;&gt;ubuntu中搜狗输入法的安装&lt;/h1&gt;
&lt;h2 id=&quot;第一步下载搜狗输入法&quot;&gt;第一步：下载搜狗输入法&lt;/h2&gt;
&lt;p&gt;网站：&lt;a href=&quot;https://pinyin.sogou.com/linux/&quot;&gt;下载链接&lt;/a&gt;&lt;/p&gt;
&lt;h2 id=&quot;第二步修改语言栏设置为fcitx然后关闭&quot;&gt;第二步：修改语言栏设置为fcitx,然后关闭&lt;/h2&gt;
&lt;h2 id=&quot;第三步在所在文件中打开终端&quot;&gt;第三步：在所在文件中打开终端&lt;/h2&gt;
&lt;h2 id=&quot;第四步一次执行如下命令&quot;&gt;第四步：一次执行如下命令&lt;/h2&gt;
&lt;p&gt;sudo dpkg -i + 搜狗文件名
sudo apt -f install&lt;/p&gt;
&lt;h2 id=&quot;第五步重启ubuntu即可&quot;&gt;第五步：重启ubuntu即可&lt;/h2&gt;
&lt;p&gt;脚下留心：如果发现ubuntu语言栏还没有fcitx，则需要先进行如下操作
1.打开Ubuntu terminal，输入以下命令，添加下载源到系统软件下载源
sudo add-apt-repository ppa:fcitx-team/nightly
2.使用以下命令更新系统列表最新软件信息
sudo apt-get update
3.使用以下命令安装fcitx
sudo apt-get install fcitx
4.使用以下命令安装fcitx配置管理工具
sudo apt-get install fcitx-config-gtk
5.使用以下命令安装fcitx-table-all软件包
sudo apt-get install fcitx-table-all
6.重启Ubuntu系统。然后打开System Settings下的Language Support（即打开语言栏设置）&lt;/p&gt;

&lt;h1 id=&quot;ubuntu中wps的安装&quot;&gt;ubuntu中wps的安装&lt;/h1&gt;
&lt;p&gt;其实可以安装微软的office，但是考虑到安装方法不是很熟悉还有就是在ubuntu下不知道如何免费激活，因此安装wps也是不错的选择&lt;/p&gt;
&lt;h2 id=&quot;第一步下载wps&quot;&gt;第一步：下载wps&lt;/h2&gt;
&lt;p&gt;官方网址：&lt;a href=&quot;https://www.wps.cn/product/wpslinux#&quot;&gt;下载链接&lt;/a&gt;&lt;/p&gt;
&lt;h2 id=&quot;第二步执行命令-sudo-gdebi-wps文件名&quot;&gt;第二步：执行命令 sudo gdebi wps文件名&lt;/h2&gt;
&lt;h2 id=&quot;第三步完成安装&quot;&gt;第三步：完成安装&lt;/h2&gt;

&lt;h1 id=&quot;解决ubuntu中优盘不能够读取的问题步骤&quot;&gt;解决ubuntu中优盘不能够读取的问题步骤&lt;/h1&gt;
&lt;p&gt;首先可以参考网址：&lt;a href=&quot;https://blog.csdn.net/langb2014/article/details/50165425&quot;&gt;参考链接１&lt;/a&gt;与 &lt;a href=&quot;https://blog.csdn.net/u010426270/article/details/52420231&quot;&gt;参考链接２&lt;/a&gt;
或者你可以采纳以下操作步骤：&lt;/p&gt;
&lt;h2 id=&quot;第一步&quot;&gt;第一步&lt;/h2&gt;
&lt;p&gt;执行：sudo fdisk -l  //目的在于查看分区挂载情况&lt;/p&gt;
&lt;h2 id=&quot;第二步用ntfsfix命令&quot;&gt;第二步用ntfsfix命令&lt;/h2&gt;
&lt;p&gt;进行挂载区的修复：sudo ntfsfix /dev/sda8（例如修复/dev/sda8，具体看自己的）&lt;/p&gt;

&lt;p&gt;脚下留心：若提示找不到ntfsfix命令，则需要安装ntfsfix，执行：sudo apt-get install ntfs-3g即可&lt;/p&gt;

&lt;h2 id=&quot;第三步&quot;&gt;第三步&lt;/h2&gt;
&lt;p&gt;弹出优盘再次插入电脑即可读取了&lt;/p&gt;

&lt;h1 id=&quot;如何解决谷歌浏览器翻墙后访问网页有时候网页图片不能显示问题&quot;&gt;如何解决谷歌浏览器翻墙后访问网页有时候网页图片不能显示问题？&lt;/h1&gt;
&lt;p&gt;最可靠且最好的方法：直接访问&lt;a href=&quot;https://githubusercontent.com.ipaddress.com/raw.githubusercontent.com&quot;&gt;链接&lt;/a&gt;，显示美国官方github的最新ip，更新到hosts文件夹中即可．
现在已ubuntu系统为例子，解决在github网站中README.md描述文档中png图片无法显示且无法下载问题，解决步骤如下：&lt;/p&gt;
&lt;h2 id=&quot;第一步-1&quot;&gt;第一步&lt;/h2&gt;
&lt;p&gt;分析原因应该是访问国外网址ip的原因，因此需要修改/etc/hosts文件，尝试配置hosts文件，直接指向github的服务器。用ipaddress查一下raw.githubusercontent.com 的ip，可以参考ip:199.232.68.133 raw.githubusercontent.com和199.232.68.133 githubusercontent.com&lt;/p&gt;
&lt;h2 id=&quot;第二步&quot;&gt;第二步&lt;/h2&gt;
&lt;p&gt;那么如果进入hosts文件才有修改的权利呢，我们需要以root身份打开hosts文件，在etc文件下：输入vim hosts或者其他文件下则需要加入相应路径将199.232.68.133 raw.githubusercontent.com和199.232.68.133 githubusercontent.com
注意：上面的两个ip我发现在2021年2月初已经无法使用，即无法加载github里面的图片，下面是更新的ip
151.101.64.133 raw.githubusercontent.com
151.101.0.133 raw.githubusercontent.com&lt;/p&gt;
&lt;h2 id=&quot;第三步-1&quot;&gt;第三步&lt;/h2&gt;
&lt;p&gt;两个ip都加入到hosts文件中，然后保存退出，刷新网页图片就可以显示了
具体情况可以参考这两个网址：&lt;a href=&quot;https://blog.csdn.net/qq_41709370/article/details/106282229?utm_medium=distribute.pc_relevant_t0.none-task-blog-OPENSEARCH-1.not_use_machine_learn_pai&amp;amp;depth_1-utm_source=distribute.pc_relevant_t0.none-task-blog-OPENSEARCH-1.not_use_machine_learn_pai&quot;&gt;网址１&lt;/a&gt;和&lt;a href=&quot;https://www.cnblogs.com/henryhappier/archive/2013/02/21/2920493.html&quot;&gt;网址２&lt;/a&gt;&lt;/p&gt;

&lt;h1 id=&quot;k-vim安装后打开文件显示按enter键继续解决方案&quot;&gt;k-vim安装后打开文件显示按enter键继续解决方案：&lt;/h1&gt;
&lt;p&gt;&lt;a href=&quot;https://www.codeprj.com/blog/9298f01.html&quot;&gt;参考链接&lt;/a&gt;&lt;/p&gt;

&lt;h1 id=&quot;ubuntu下解压文件&quot;&gt;ubuntu下解压文件&lt;/h1&gt;
&lt;p&gt;解压zip文件：unzip + 文件名。若是windows下的zip中文文件解压可能有乱码，此时要用unzip -O CP936 + 文件名&lt;/p&gt;

&lt;p&gt;万能解压：unar，可以解决mac，windows下的各类压缩文件，且不乱码&lt;/p&gt;
</description>
        <pubDate>Mon, 17 May 2021 00:00:00 +0800</pubDate>
        <link>www.xiangtao.net.cn/2021/05/ubuntu1/</link>
        <guid isPermaLink="true">www.xiangtao.net.cn/2021/05/ubuntu1/</guid>
        
        <category>linux</category>
        
        
      </item>
    
      <item>
        <title>Python-Matplotlib-Chapter1</title>
        <description>&lt;h1 id=&quot;11&quot;&gt;1.1&lt;/h1&gt;
&lt;h2 id=&quot;figure11&quot;&gt;Figure1.1&lt;/h2&gt;

&lt;p&gt;&lt;img src=&quot;https://cdn.jsdelivr.net/gh/xiang-tao/image-hosting@master/picture/chapter_1_1.2rderkjbfps0.png&quot; alt=&quot;chapter_1_1&quot; /&gt;&lt;/p&gt;

&lt;details&gt;
  &lt;summary&gt;View Code&lt;/summary&gt;
  &lt;pre&gt;&lt;code&gt; 
import matplotlib.pyplot as plt
import numpy as np
from matplotlib import cm as cm

# define data
x = np.linspace(0.5, 3.5, 100)
y = np.sin(x)
y1 = np.random.randn(100)

# scatter figure
plt.scatter(x, y1, c='0.25', label='scatter figure')

# plot figure
plt.plot(x, y, ls='--', lw=2, label='plot figure')

# some clean up
# 去掉上边框和有边框
for spine in plt.gca().spines.keys():
    if spine == 'top' or spine == 'right':
        plt.gca().spines[spine].set_color('none')

# x轴的刻度在下边框
plt.gca().xaxis.set_ticks_position('bottom')

# y轴的刻度在左边框
plt.gca().yaxis.set_ticks_position('left')

# 设置x轴、y轴范围
plt.xlim(0.0, 4.0)
plt.ylim(-3.0, 3.0)

# 设置x轴、y轴标签
plt.xlabel('x_axis')
plt.ylabel('y_axis')

# 绘制x、y轴网格
plt.grid(True, ls=':', color='r')

# 绘制水平参考线
plt.axhline(y=0.0, c='r', ls='--', lw=2)

# 绘制垂直参考区域
plt.axvspan(xmin=1.0, xmax=2.0, facecolor='y', alpha=0.5)

# 绘制注解
plt.annotate('maximum', xy=(np.pi / 2, 1.0), xytext=((np.pi / 2) + 0.15, 1.5),
             weight='bold', color='r', arrowprops=dict(arrowstyle='-&amp;gt;',
                                                       connectionstyle='arc3', color='r'))

# 绘制注解
plt.annotate('spines', xy=(0.75, -3), xytext=(0.35, -2.25),
             weight='bold', color='r', arrowprops=dict(arrowstyle='-&amp;gt;',
                                                       connectionstyle='arc3', color='r'))

# 绘制注解
plt.annotate('', xy=(0, -2.78), xytext=(0.4, -2.32),
             weight='bold', color='r', arrowprops=dict(arrowstyle='-&amp;gt;',
                                                       connectionstyle='arc3', color='r'))

# 绘制注解
plt.annotate('', xy=(3.5, -2.98), xytext=(3.6, -2.7),
             weight='bold', color='r', arrowprops=dict(arrowstyle='-&amp;gt;',
                                                       connectionstyle='arc3', color='r'))

# 绘制文本
plt.text(3.6, -2.70, &quot;'|' is tickline&quot;, weight='bold', color='b')
plt.text(3.6, -2.95, &quot;3.5 is tickline&quot;, weight='bold', color='b')

plt.title(&quot;structure of matplotlib&quot;)

plt.legend(loc='upper right')

plt.show() 
  &lt;/code&gt;&lt;/pre&gt;
&lt;/details&gt;

</description>
        <pubDate>Sat, 15 May 2021 00:00:00 +0800</pubDate>
        <link>www.xiangtao.net.cn/2021/05/matplotchapter1/</link>
        <guid isPermaLink="true">www.xiangtao.net.cn/2021/05/matplotchapter1/</guid>
        
        <category>Python</category>
        
        
      </item>
    
  </channel>
</rss>
